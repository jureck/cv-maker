{"version":3,"sources":["assets/templates sync /^/template_.*/.PNG$","assets/templates/template_0.PNG","assets/templates/template_1.PNG","components/StepInfo/index.js","components/CvDocument/styles.js","components/Templates/index.js","components/Button/index.js","components/PersonalData/index.js","utils/getYearsFromRange.js","components/Education/index.js","components/WorkExperience/index.js","components/Languages/index.js","components/Skills/index.js","components/CvDocument/index.js","components/Download/index.js","components/Home/index.js","components/Logo/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StepDots","current","a","i","parseInt","push","key","className","styles","StyleSheet","create","0","page","flexDirection","backgroundColor","padding","fontFamily","fontSize","personalData","marginBottom","justifyContent","name","fontWeight","educationElement","marginTop","educationSchools","marginLeft","educationSpec","workElement","workInfo","workPosition","languageElement","languageName","languageLevel","header","photo","height","1","leftPanel","width","rightPanel","education","educationSchoolName","educationYears","workYears","Font","register","family","fonts","src","Templates","setTemplate","template","changeStep","templatesList","colors","useState","selectedColor","setSelectedColor","tem","q","Fragment","onClick","number","require","alt","color","colorCode","selectColor","Button","props","type","text","children","PersonalData","personal","setPersonal","photoName","setPhotoName","isNameError","setIsNameError","isSurnameError","setIsSurnameError","isPhoneError","setIsPhoneError","nameRef","useRef","surnameRef","phoneRef","htmlFor","onChange","target","file","files","reader","FileReader","slice","length","onload","result","readAsDataURL","setPhoto","accept","ref","value","surname","city","max","phone","email","getYearsFromRange","firstYear","lastYear","years","Education","schools","setSchools","schoolName","setSchoolName","major","setMajor","from","to","schoolYears","setSchoolYears","isModalVisible","setIsModalVisible","Date","getFullYear","onSubmit","preventDefault","year","oldArr","Math","random","school","newSchools","filter","deleteSchool","WorkExperience","works","setWorks","companyName","setCompanyName","position","setPosition","monthFrom","yearFrom","monthTo","yearTo","workDate","setWorkDate","months","month","work","newWorks","deleteCompany","Languages","languages","setLanguages","language","setLanguage","level","setLevel","newLanguages","deleteLanguage","Skills","skills","setSkills","setIsCompleted","skill","setSkill","newSkills","deleteSkill","CvDocument","size","style","userInfo","info","workCompanyName","Download","document","fileName","blob","url","loading","error","Home","isCompleted","Logo","App","appRef","currentStep","isForward","window","scrollTo","property","transform","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0eef0835.chunk.js","sourcesContent":["var map = {\n\t\"./template_0.PNG\": 429,\n\t\"./template_1.PNG\": 430\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 258;","module.exports = __webpack_public_path__ + \"static/media/template_0.55490b1f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/template_1.6d06ff1a.PNG\";","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst StepDots = ({current}) => {\r\n\r\n    let a = [];\r\n    for(let i=0; i<6; i++) {\r\n        if(i<parseInt(current)) {\r\n            a.push(<span key={i} className=\"dot filled\"></span>);\r\n        }\r\n        else {\r\n            a.push(<span key={i} className=\"dot\" ></span>)   ;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"dots\">\r\n            {a}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default StepDots;","import { Font, StyleSheet } from '@react-pdf/renderer';\r\n\r\n\r\nexport const styles = StyleSheet.create({\r\n    0: {\r\n      page: {\r\n          flexDirection: 'column',\r\n          backgroundColor: '#FFFFFF',\r\n          padding: 30,\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 15\r\n        },\r\n        personalData: {\r\n          marginBottom: 50,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between'\r\n        },\r\n        name: {\r\n          fontWeight: 'bold',\r\n          marginBottom: 20,\r\n          fontSize: 22\r\n        },\r\n        educationElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        educationSchools: {\r\n          marginLeft: 10\r\n        },\r\n        educationSpec: {\r\n          fontWeight: 'bold'\r\n        },\r\n        workElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        workInfo: {\r\n          marginLeft: 10\r\n        },\r\n        workPosition: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageElement: {\r\n          flexDirection: 'row'\r\n        },\r\n        languageName: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageLevel: {\r\n          marginLeft: 5\r\n        },\r\n        header: {\r\n          marginTop: 20,\r\n          marginBottom: 10,\r\n          fontWeight: 'bold',\r\n          fontSize: 20\r\n        },\r\n        photo: {\r\n          height: 150\r\n        }\r\n    },\r\n    1: {\r\n      leftPanel: {\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        width: '35%',\r\n        padding: 20\r\n      },\r\n      rightPanel: {\r\n        padding: 30,\r\n        marginTop: 150\r\n      },\r\n      page: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#FFFFFF',\r\n        fontFamily: 'Open Sans',\r\n        fontSize: 13\r\n      },\r\n      personalData: {\r\n        marginBottom: 30,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n      },\r\n      name: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        fontSize: 22\r\n      },\r\n      education: {\r\n        marginBottom: 60\r\n      },\r\n      educationElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      educationSchools: {\r\n        marginLeft: 10,\r\n        fontSize: 12\r\n      },\r\n      educationSchoolName: {\r\n        fontWeight: 'bold'\r\n      },\r\n      workElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      workInfo: {\r\n        marginLeft: 10,\r\n        fontSize: 12\r\n      },\r\n      educationYears: {\r\n        fontSize: 12\r\n      },\r\n      workYears: {\r\n        fontSize: 12\r\n      },\r\n      workPosition: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageElement: {\r\n        flexDirection: 'row'\r\n      },\r\n      languageName: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageLevel: {\r\n        marginLeft: 5\r\n      },\r\n      header: {\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: 20\r\n      },\r\n      photo: {\r\n        width: \"90%\",\r\n        height: 'auto',\r\n        marginBottom: 10\r\n      }\r\n    }\r\n  });\r\n\r\n  Font.register({\r\n    family: 'Open Sans',\r\n    fonts: [\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-regular.ttf' },\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-600.ttf', fontWeight: 600 }\r\n    ]\r\n    });","import React, { useState } from 'react';\r\nimport './index.scss';\r\nimport StepInfo from '../StepInfo/index';\r\nimport { styles } from '../CvDocument/styles'\r\n\r\nconst Templates = ({ setTemplate, template, changeStep }) => {\r\n    const templatesList = Object.keys(styles);\r\n\r\n    const colors = {\r\n        'gray': \"#B5B5B5\", \r\n        'green': \"#90C999\", \r\n        'blue': \"#91BDC7\", \r\n        'yellow': \"#F1F37B\", \r\n        'brown': \"#AD8E7D\",\r\n    };\r\n\r\n    const [selectedColor, setSelectedColor] = useState(\"gray\");\r\n\r\n    const selectColor = (color) => {\r\n        setSelectedColor(color);\r\n        let colorCode = colors[color];\r\n        setTemplate({...template, color: colorCode});\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <main className=\"templates__container\">\r\n                <StepInfo current=\"1\" />\r\n                <p className=\"templates__title\">\r\n                    Choose template\r\n                </p>\r\n                {templatesList.map((tem, q) => {\r\n                    if(q === 1) return (\r\n                        <React.Fragment key={q}>\r\n        \r\n                            <img key={q} onClick={() => { setTemplate({...template, number: tem}); changeStep(1, true) }} src={require(`../../assets/templates/template_${tem}.PNG`)} alt={`template_${tem}`} className=\"templates__img\"/>\r\n                            \r\n                            <div className=\"templates__colors\">\r\n                                {Object.keys(colors).map((color) => {\r\n                                    return <div\r\n                                        key={color} \r\n                                        onClick={() => selectColor(color)} \r\n                                        id={color} \r\n                                        className={`templates__color ${selectedColor === color ? \"selected\" : \"\"}`} \r\n                                    />\r\n                                })}\r\n                            </div>\r\n\r\n                        </React.Fragment>\r\n                    ); else return (\r\n                    <img key={q} onClick={() => { setTemplate({...template, number: tem}); changeStep(1, true) }} src={require(`../../assets/templates/template_${tem}.PNG`)} alt={`template_${tem}`} className=\"templates__img\"/>\r\n                    )\r\n                })}\r\n                \r\n            </main>\r\n            \r\n           \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Templates;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Button = (props) => {\r\n    return (  \r\n        <button \r\n            className={`button ${props.type === \"cancel\" ? \"cancel\" : \"\" }`} \r\n        >\r\n            {props.text}\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n \r\nexport default Button;","import React, { useState, useRef } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst PersonalData = ({ personal, setPersonal, changeStep }) => {\r\n\r\n    const [photoName, setPhotoName] = useState(\"\");\r\n\r\n    const [isNameError, setIsNameError] = useState(false);\r\n    const [isSurnameError, setIsSurnameError] = useState(false);\r\n    const [isPhoneError, setIsPhoneError] = useState(false);\r\n\r\n    const nameRef = useRef(null);\r\n    const surnameRef = useRef(null);\r\n    const phoneRef = useRef(null);\r\n    \r\n    const setPhoto = (e) => {\r\n        if(e.target) {\r\n            const file = e.target.files[0];\r\n            const photoName = e.target.files[0].name;\r\n            const reader = new FileReader();\r\n            setPhotoName(`Uploaded (${photoName.slice(0, 20)}${photoName.length>20 ? \"...\" : \"\"})`);\r\n            reader.onload = (e) => {\r\n                setPersonal({...personal, photo: e.target.result});\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const checkValidity = () => {\r\n        if(!nameRef.current.value) {\r\n            setIsNameError(true);\r\n        }\r\n        if(!surnameRef.current.value) {\r\n            setIsSurnameError(true);\r\n        }\r\n        if(!phoneRef.current.value) {\r\n            setIsPhoneError(true);\r\n        }\r\n        if(nameRef.current.value && surnameRef.current.value && phoneRef.current.value) {\r\n            changeStep(2, true);\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <>\r\n            <main className=\"personal__container\">\r\n                <StepInfo current=\"2\" />\r\n                <p className=\"personal__title\">\r\n                    Personal data\r\n                </p>\r\n                <form className=\"form\">\r\n                    <p className=\"form__label\">Your photo</p>\r\n                    <label htmlFor=\"photo\" className=\"photo__input\">\r\n                        Click here to upload\r\n                    </label>\r\n                    <p className=\"photo__name\">\r\n                        {photoName}\r\n                    </p>\r\n                    <input onChange={(e) => setPhoto(e, setPersonal, personal)} className=\"form__input hidden\" type=\"file\" id=\"photo\" accept=\"image/png, image/jpeg\" />\r\n                    \r\n                    <label htmlFor=\"name\" className=\"form__label\">Name</label>\r\n                    <input ref={nameRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className={`form__input ${isNameError ? \"error\" : \"\"}`} name=\"name\" value={personal.name} />\r\n                    <p id=\"nameError\" className={`form__input-error ${isNameError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"surname\" className=\"form__label\">Surname</label>\r\n                    <input ref={surnameRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className={`form__input ${isSurnameError ? \"error\" : \"\"}`} name=\"surname\" value={personal.surname}/>\r\n                    <p id=\"surnameError\" className={`form__input-error ${isSurnameError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"city\" className=\"form__label\">City</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className=\"form__input\" name=\"city\" value={personal.city}/>\r\n\r\n                    <label htmlFor=\"phone\" className=\"form__label\">Phone number</label>\r\n                    <input ref={phoneRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"number\" className={`form__input ${isPhoneError ? \"error\" : \"\"}`} name=\"phone\" max=\"999999999\" value={personal.phone}/>\r\n                    <p id=\"phoneError\" className={`form__input-error ${isPhoneError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"email\" className=\"form__label\">Email</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"email\" className=\"form__input\" name=\"email\" value={personal.email}/>\r\n                </form>\r\n\r\n                <section className=\"form__controls\">\r\n                    <span onClick={() => changeStep(2)}>\r\n                        <Button text=\"Back\" type=\"cancel\" />\r\n                    </span>\r\n        \r\n                    <span onClick={checkValidity}> \r\n                        <Button text=\"Next step\" />\r\n                    </span>\r\n                </section>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default PersonalData;","const getYearsFromRange = (firstYear, lastYear) => {\r\n    const years =  [' '];\r\n    for(let i = firstYear; i <= lastYear; i++) {\r\n        years.push(i);\r\n    }\r\n    return years;\r\n}\r\nexport default getYearsFromRange;\r\n","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Education = ({ schools, setSchools, changeStep}) => {\r\n\r\n    const [schoolName, setSchoolName] = useState('');\r\n    const [major, setMajor] = useState('');\r\n    const [schoolYears, setSchoolYears] = useState({\r\n        from: '',\r\n        to: ''\r\n    });\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewSchool = () => {\r\n        setSchools(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                name: schoolName,\r\n                major: major,\r\n                from: schoolYears.from,\r\n                to: schoolYears.to\r\n            }\r\n        ]);\r\n        setSchoolName('');\r\n        setSchoolYears('');\r\n        setMajor('');\r\n        setSchoolYears({\r\n            from: '',\r\n            to: ''\r\n        });\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteSchool = (id) => {\r\n        const newSchools = schools.filter((school) => school.id !== id);\r\n        setSchools([...newSchools]);\r\n    }\r\n\r\n    const years = getYearsFromRange(1950, new Date().getFullYear());\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"education__container\">\r\n            <section className={`education__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"schoolname\" className=\"form__label\">School name</label>\r\n                    <input onChange={(e) => setSchoolName(e.target.value)} className=\"form__input\" name=\"schoolname\" value={schoolName} />\r\n\r\n                    <label htmlFor=\"major\" className=\"form__label\">Major</label>\r\n                    <input onChange={(e) => setMajor(e.target.value)} className=\"form__input\" name=\"major\" value={major} />\r\n\r\n                    <label htmlFor=\"from\" className=\"form__label\">Education years</label>\r\n                    <section className=\"school__years\">\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"from\" value={schoolYears.from}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"to\" value={schoolYears.to}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewSchool}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n            <StepInfo current=\"3\"/>\r\n            <p className=\"education__title\">\r\n                Education\r\n            </p>\r\n            {schools.length > 0 && \r\n            \r\n            schools.map((school, q) => {\r\n        \r\n            return  <article onClick={() => deleteSchool(school.id)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{school.from} - </span>\r\n                            <span className=\"years-to\">{school.to}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {school.major}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {school.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(3)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(3, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Education;","import React, { useState } from 'react';\r\nimport './index.scss'\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport Button from '../Button/index';\r\n\r\n\r\nconst WorkExperience = ({ works, setWorks, changeStep }) => {\r\n    \r\n    const [companyName, setCompanyName] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [workDate, setWorkDate] = useState({\r\n        monthFrom: '',\r\n        yearFrom: '',\r\n        monthTo: '',\r\n        yearTo: ''\r\n    });\r\n    const years = getYearsFromRange(1960, new Date().getFullYear());\r\n    const months = [' ', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewCompany = () => {\r\n        setWorks(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                name: companyName,\r\n                position: position,\r\n                monthFrom: workDate.monthFrom,\r\n                yearFrom: workDate.yearFrom,\r\n                monthTo: workDate.monthTo,\r\n                yearTo: workDate.yearTo\r\n            }\r\n        ]);\r\n        setCompanyName('');\r\n        setWorkDate({\r\n            monthFrom: '',\r\n            yearFrom: '',\r\n            monthTo: '',\r\n            yearTo: ''\r\n        });\r\n        setPosition('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteCompany = (id) => {\r\n        const newWorks = works.filter((work) => work.id !== id);\r\n        setWorks([...newWorks]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"work__container\">\r\n            <StepInfo current=\"4\"/>\r\n            <p className=\"work__title\">\r\n                Work experience\r\n            </p>\r\n            <section className={`work__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"companyname\" className=\"form__label\">Company name</label>\r\n                    <input onChange={(e) => setCompanyName(e.target.value)} className=\"form__input\" name=\"companyname\" value={companyName} />\r\n\r\n                    <label htmlFor=\"position\" className=\"form__label\">Position</label>\r\n                    <input onChange={(e) => setPosition(e.target.value)} className=\"form__input\" name=\"position\" value={position} />\r\n\r\n                    <label htmlFor=\"monthFrom\" className=\"form__label\">Start date</label>\r\n                    <section className=\"work__start\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthFrom\" value={workDate.monthFrom}>\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearFrom\" value={workDate.yearFrom}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    \r\n                    <label htmlFor=\"monthTo\" className=\"form__label\">End date</label>\r\n                    <section className=\"work__end\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthTo\" value={workDate.monthTo}>\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearTo\" value={workDate.yearTo}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewCompany}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n\r\n            {works.length > 0 && \r\n            \r\n            works.map((work, q) => {\r\n        \r\n            return  <article onClick={() => deleteCompany(work.id)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{`${work.monthFrom}/${work.yearFrom}`} - </span>\r\n                            <span className=\"years-to\">{`${work.monthTo}/${work.yearTo}`}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {work.position}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {work.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(4)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(4, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default WorkExperience;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Languages = ({ languages, setLanguages, changeStep }) => {\r\n\r\n    const [language, setLanguage] = useState('');\r\n    const [level, setLevel] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    \r\n    const saveNewLanguage = () => {\r\n        setLanguages(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                language: language,\r\n                level: level\r\n            }\r\n        ]);\r\n        setLanguage('');\r\n        setLevel('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteLanguage = (id) => {\r\n        const newLanguages = languages.filter((language) => language.id !== id);\r\n        setLanguages([...newLanguages]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"languages__container\">\r\n            <StepInfo current=\"5\"/>\r\n            <p className=\"work__title\">\r\n                Languages\r\n            </p>\r\n            <section className={`languages__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"language\" className=\"form__label\">Language</label>\r\n                    <input onChange={(e) => setLanguage(e.target.value)} className=\"form__input\" name=\"language\" value={language} />\r\n\r\n                    <label htmlFor=\"level\" className=\"form__label\">Level of knowledge</label>\r\n                    <input onChange={(e) => setLevel(e.target.value)} className=\"form__input\" name=\"level\" value={level} />\r\n\r\n                   \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewLanguage}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {languages.length > 0 && \r\n            \r\n            languages.map((language, q) => {\r\n        \r\n            return  <article onClick={() => deleteLanguage(language.id)} key={q} className=\"language__info\">\r\n                        <p className=\"language__name\">\r\n                            {language.language}\r\n                        </p>\r\n                        <p className=\"language__level\">\r\n                            {language.level}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(5)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(5, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Languages;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Skills = ({ skills, setSkills, changeStep, setIsCompleted }) => {\r\n\r\n    const [skill, setSkill] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewSkill = () => {\r\n        setSkills(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                skill: skill\r\n            }\r\n        ]);\r\n        setSkill('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteSkill = (id) => {\r\n        const newSkills = skills.filter((skill) => skill.id !== id);\r\n        setSkills([...newSkills]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"skills__container\">\r\n            <StepInfo current=\"6\" />\r\n            <p className=\"work__title\">\r\n                Additional skills\r\n            </p>\r\n            <section className={`skills__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"skill\" className=\"form__label\">Skill</label>\r\n                    <input onChange={(e) => setSkill(e.target.value)} className=\"form__input\" name=\"skill\" value={skill} />\r\n            \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewSkill}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {skills.length > 0 && \r\n            \r\n            skills.map((skill, q) => {\r\n        \r\n            return  <article onClick={() => deleteSkill(skill.id)} key={q} className=\"skill__info\">\r\n                        <p className=\"skill__name\">\r\n                            {skill.skill}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(6)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => {changeStep(6, true); setIsCompleted(true)}}> \r\n                    <Button text=\"Create CV\" />\r\n                </span>\r\n            </section>      \r\n        </main>\r\n        \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Skills;","import React from 'react';\r\nimport { Document, Page, Text, View, Image } from '@react-pdf/renderer';\r\n\r\nimport { styles } from './styles';\r\n\r\nconst CvDocument = ({ template, personal, schools, works, languages, skills }) => {\r\n   \r\n    if(template.number === \"0\") {\r\n       \r\n        return (\r\n            <Document>\r\n                <Page size=\"A4\" style={styles[template.number].page}>\r\n\r\n                <View style={styles[template.number].personalData}>\r\n                    <View style={styles[template.number].userInfo}>\r\n                    <View style={styles[template.number].name}>\r\n                        <Text>{personal.name}</Text>\r\n                        <Text>{personal.surname}</Text>\r\n                    </View>\r\n                    <View style={styles[template.number].info}>\r\n                        <Text>{personal.email}</Text>\r\n                        <Text>{personal.phone}</Text>\r\n                        <Text>{personal.city}</Text>\r\n                    </View>\r\n                    </View>\r\n                    <Image style={styles[template.number].photo} src={personal.photo}/>\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{schools.length > 0 && 'Education'}</Text>\r\n                <View style={styles[template.number].education}>\r\n                    {schools.map((school) => {\r\n                        return  <View style={styles[template.number].educationElement}>\r\n                                    <View style={styles[template.number].educationYears}>\r\n                                        <Text>\r\n                                            {school.from} - {school.to}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].educationSchools}>\r\n                                        <Text style={styles[template.number].educationSchoolName}>\r\n                                            {school.name}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].educationSpec}>\r\n                                            {school.major}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{works.length > 0 && 'Work experience'}</Text>\r\n                <View style={styles[template.number].work}>\r\n                    {works.map((work) => {\r\n                        return  <View style={styles[template.number].workElement}>\r\n                                    <View style={styles[template.number].workYears}>\r\n                                        <Text>\r\n                                            {work.monthFrom}/{work.yearFrom} - {work.monthTo}/{work.yearTo}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].workInfo}>\r\n                                        <Text style={styles[template.number].workPosition}>\r\n                                            {work.position}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].workCompanyName}>\r\n                                            {work.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{languages.length > 0 && 'Languages'}</Text>\r\n                <View style={styles[template.number].languages}>\r\n                    {languages.map((language) => {\r\n                        return  <View style={styles[template.number].languageElement}>\r\n                                    <Text style={styles[template.number].languageName}>\r\n                                        {language.language}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].languageLevel}>\r\n                                        - {language.level}\r\n                                    </Text>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{skills.length > 0 && 'Additional skills'}</Text>\r\n                {skills.map((skill, q) => {\r\n                    return <Text key={q}>{skill.skill}</Text>\r\n                })}\r\n                </Page>\r\n            </Document>\r\n        );\r\n    } else if(template.number === \"1\") {\r\n        return (\r\n            <Document>\r\n            <Page size=\"A4\" style={styles[template.number].page}>\r\n            <View style={{...styles[template.number].leftPanel, backgroundColor: template.color}}>\r\n            <Image style={styles[template.number].photo} src={personal.photo}/>\r\n            <View style={styles[template.number].personalData}>\r\n                <View style={styles[template.number].name}>\r\n                <Text>{personal.name}</Text>\r\n                <Text>{personal.surname}</Text>\r\n                </View>\r\n                <View style={styles[template.number].info}>\r\n                <Text>{personal.email}</Text>\r\n                <Text>{personal.phone}</Text>\r\n                <Text>{personal.city}</Text>\r\n                </View>\r\n            </View>\r\n\r\n                <Text style={styles[template.number].header}>{languages.length > 0 && 'Languages'}</Text>\r\n                <View style={styles[template.number].languages}>\r\n                    {languages.map((language, q) => {\r\n                        return  <View key={q} style={styles[template.number].languageElement}>\r\n                                    <Text style={styles[template.number].languageName}>\r\n                                        {language.language}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].languageLevel}>\r\n                                        - {language.level}\r\n                                    </Text>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{skills.length > 0 && 'Additional skills'}</Text>\r\n                {skills.map((skill, q) => {\r\n                    return <Text key={q}>{skill.skill}</Text>\r\n                })}\r\n\r\n            </View>\r\n\r\n            <View style={styles[template.number].rightPanel}>\r\n            <Text style={styles[template.number].header}>{schools.length > 0 && 'Education'}</Text>\r\n            <View style={styles[template.number].education}>\r\n                {schools.map((school) => {\r\n                    return  <View style={styles[template.number].educationElement}>\r\n                                <View style={styles[template.number].educationYears}>\r\n                                    <Text>\r\n                                        {school.from} - {school.to}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles[template.number].educationSchools}>\r\n                                    <Text style={styles[template.number].educationSchoolName}>\r\n                                        {school.name}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].educationSpec}>\r\n                                        {school.major}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                })}\r\n            </View>\r\n\r\n            <Text style={styles[template.number].header}>{works.length > 0 && 'Work experience'}</Text>\r\n            <View style={styles[template.number].work}>\r\n                    {works.map((work) => {\r\n                        return  <View style={styles[template.number].workElement}>\r\n                                    <View style={styles[template.number].workYears}>\r\n                                        <Text>\r\n                                            {work.monthFrom}/{work.yearFrom} - {work.monthTo}/{work.yearTo}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].workInfo}>\r\n                                        <Text style={styles[template.number].workPosition}>\r\n                                            {work.position}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].workCompanyName}>\r\n                                            {work.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n            </View>\r\n\r\n            </View>\r\n        \r\n            </Page>\r\n            </Document>\r\n        );\r\n    } else return null;\r\n\r\n}\r\n \r\nexport default CvDocument;","import React from 'react';\r\nimport './index.scss';\r\n\r\nimport Button from '../Button/index';\r\nimport CvDocument from '../CvDocument/index';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nconst Download = ({ template, personal, schools, works, languages, skills, changeStep }) => {\r\n  \r\n    return (\r\n      <main className=\"download__container\">\r\n        \r\n        <p className=\"download__title\">\r\n          Your CV is ready\r\n        </p>\r\n        \r\n        <Button>\r\n          <PDFDownloadLink \r\n              document={  <CvDocument \r\n                            template={template}\r\n                            personal={personal}\r\n                            schools={schools}\r\n                            works={works}\r\n                            languages={languages}\r\n                            skills={skills}\r\n                          />} \r\n              fileName={`${personal.name}'s_CV.pdf`}\r\n          >\r\n              {({ blob, url, loading, error }) => (loading ? 'Loading...' : 'Download')}\r\n          </PDFDownloadLink>\r\n        </Button>\r\n        <section className=\"form__controls\">\r\n          <span onClick={() => changeStep(7)}>\r\n              <Button text=\"Back\" type=\"cancel\" />\r\n          </span>\r\n\r\n        </section>    \r\n      </main>\r\n      \r\n    );\r\n}\r\n \r\nexport default Download;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport Templates from '../Templates/index';\r\nimport Button from '../Button/index';\r\n\r\nimport PersonalData from '../PersonalData/index';\r\nimport Education from '../Education/index';\r\nimport WorkExperience from '../WorkExperience/index';\r\nimport Languages from '../Languages/index';\r\nimport Skills from '../Skills/index';\r\nimport Download from '../Download/index';\r\n\r\nconst Home = ({ changeStep }) => {\r\n\r\n    const [template, setTemplate] = useState({ color: \"#b5b5b5\" });\r\n    const [personal, setPersonal] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        city: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        photo: \"\",\r\n    });\r\n    const [schools, setSchools] = useState([]);\r\n    const [works, setWorks] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [skills, setSkills] = useState([]);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n    return ( \r\n        <>\r\n            <main className=\"home__container\">\r\n                <p className=\"hero__text\">\r\n                    Create your own CV with our templates!\r\n                </p>\r\n                <span onClick={() => changeStep(0, true)} >\r\n                    <Button text=\"Start now\" />\r\n                </span>\r\n                <p className=\"invite__text\">\r\n                    No programms needed.\r\n                </p>\r\n                <p className=\"invite__text\">\r\n                    Easy in use.\r\n                </p>\r\n                <p className=\"invite__text\">\r\n                    PDF format.\r\n                </p>\r\n            </main>\r\n            <Templates \r\n                template={template}\r\n                setTemplate={setTemplate}\r\n                changeStep={changeStep}\r\n            />\r\n            <PersonalData \r\n                personal={personal}\r\n                setPersonal={setPersonal}\r\n                changeStep={changeStep}   \r\n            />\r\n            <Education \r\n                schools={schools}\r\n                setSchools={setSchools}\r\n                changeStep={changeStep}\r\n            />\r\n            <WorkExperience \r\n                works={works}\r\n                setWorks={setWorks}\r\n                changeStep={changeStep}\r\n            />\r\n            <Languages \r\n                languages={languages}\r\n                setLanguages={setLanguages}\r\n                changeStep={changeStep}\r\n            />\r\n            <Skills \r\n                skills={skills}\r\n                setSkills={setSkills}\r\n                setIsCompleted={setIsCompleted}\r\n                changeStep={changeStep}\r\n            />\r\n\r\n          { isCompleted &&  <Download \r\n                template={template}\r\n                personal={personal}\r\n                schools={schools}\r\n                works={works}\r\n                languages={languages}\r\n                skills={skills}\r\n                changeStep={changeStep}\r\n            />}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Logo = () => {\r\n    return ( \r\n        <p className=\"logo\">\r\n            cv-maker\r\n        </p>\r\n    );\r\n}\r\n \r\nexport default Logo;","import React, { useRef } from 'react';\nimport './App.scss';\nimport Home from './components/Home/index';\nimport Logo from './components/Logo/index';\n\n\n\n\n\nconst App = () => {\n\n  const appRef = useRef(null);\n\n  const changeStep = (currentStep, isForward = false) => {\n    window.scrollTo(0, 0);\n    const property = isForward ? `translateX(-${currentStep + 1}00vw)` : `translateX(-${currentStep - 1}00vw)`;\n    appRef.current.style.transform = property;\n  }\n  \n  return (\n    <>\n      <Logo />\n      <div ref={appRef} className=\"app__container\"> \n        <Home \n          changeStep={changeStep}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}