{"version":3,"sources":["assets/templates sync /^/template_.*/.PNG$","assets/templates/template_0.PNG","assets/templates/template_1.PNG","components/StepInfo/index.js","components/CvDocument/styles.js","components/Templates/index.js","components/Button/index.js","components/PersonalData/index.js","utils/getYearsFromRange.js","components/Education/index.js","components/WorkExperience/index.js","components/Languages/index.js","components/Skills/index.js","components/CvDocument/Template0/index.js","components/CvDocument/Template1/index.js","components/CvDocument/index.js","components/Download/index.js","utils/hooks/useWindowSize.js","components/Home/index.js","components/Logo/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StepDots","current","a","i","parseInt","push","key","className","styles","StyleSheet","create","0","page","flexDirection","backgroundColor","padding","fontFamily","fontSize","personalData","marginBottom","justifyContent","name","fontWeight","educationElement","marginTop","educationSchools","marginLeft","educationSchoolName","workElement","workInfo","workPosition","languageElement","languageName","languageLevel","header","photo","height","1","leftPanel","width","rightPanel","education","educationYears","workYears","Font","register","family","fonts","src","Templates","setTemplate","template","changeStep","templatesList","colorfulTemplates","colors","useState","selectedColor","setSelectedColor","tem","q","Fragment","onClick","number","require","alt","includes","color","colorCode","selectColor","Button","props","type","text","children","PersonalData","personal","setPersonal","photoName","setPhotoName","isNameError","setIsNameError","isSurnameError","setIsSurnameError","isPhoneError","setIsPhoneError","nameRef","useRef","surnameRef","phoneRef","htmlFor","onChange","target","file","files","reader","FileReader","slice","length","onload","result","readAsDataURL","setPhoto","accept","ref","value","surname","city","max","phone","email","getYearsFromRange","firstYear","lastYear","years","unshift","Education","schools","setSchools","schoolName","setSchoolName","major","setMajor","from","to","schoolYears","setSchoolYears","isModalVisible","setIsModalVisible","Date","getFullYear","onSubmit","preventDefault","year","oldArr","Math","random","school","newSchools","filter","deleteSchool","WorkExperience","works","setWorks","companyName","setCompanyName","position","setPosition","monthFrom","yearFrom","monthTo","yearTo","workDate","setWorkDate","months","month","work","newWorks","deleteCompany","Languages","languages","setLanguages","language","setLanguage","level","setLevel","newLanguages","deleteLanguage","Skills","skills","setSkills","setIsCompleted","skill","setSkill","newSkills","deleteSkill","Template0","size","style","userInfo","info","educationSpec","workCompanyName","Template1","CvDocument","choosenTemplate","Download","document","fileName","loading","useWindowSize","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Home","previewPosition","isPreviewOpen","isCompleted","url","transform","scale","pageNumber","Logo","App","appRef","setPreviewPosition","setIsPreviewOpen","currentStep","isForward","scrollTo","property","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iUAAA,IAAIA,EAAM,CACT,mBAAoB,IACpB,mBAAoB,KAIrB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCvBpBU,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,kYCqB5BC,G,cAlBE,SAAC,GAGd,IAH6B,IAAdC,EAAa,EAAbA,QAEXC,EAAI,GACAC,EAAE,EAAGA,EAAE,EAAGA,IACXA,EAAEC,SAASH,GACVC,EAAEG,KAAK,0BAAMC,IAAKH,EAAGI,UAAU,gBAG/BL,EAAEG,KAAK,0BAAMC,IAAKH,EAAGI,UAAU,SAGvC,OACI,yBAAKA,UAAU,QACVL,K,OCbAM,EAASC,IAAWC,OAAO,CACpCC,EAAG,CACDC,KAAM,CACFC,cAAe,SACfC,gBAAiB,UACjBC,QAAS,GACTC,WAAY,YACZC,SAAU,IAEZC,aAAc,CACZC,aAAc,GACdN,cAAe,MACfO,eAAgB,iBAElBC,KAAM,CACJC,WAAY,OACZH,aAAc,GACdF,SAAU,IAEZM,iBAAkB,CAChBV,cAAe,MACfW,UAAW,GAEbC,iBAAkB,CAChBC,WAAY,IAEdC,oBAAqB,CACnBL,WAAY,QAEdM,YAAa,CACXf,cAAe,MACfW,UAAW,GAEbK,SAAU,CACRH,WAAY,IAEdI,aAAc,CACZR,WAAY,QAEdS,gBAAiB,CACflB,cAAe,OAEjBmB,aAAc,CACZV,WAAY,QAEdW,cAAe,CACbP,WAAY,GAEdQ,OAAQ,CACNV,UAAW,GACXL,aAAc,GACdG,WAAY,OACZL,SAAU,IAEZkB,MAAO,CACLC,OAAQ,MAGdC,EAAG,CACDC,UAAW,CACTzB,cAAe,SACfuB,OAAQ,OACRG,MAAO,MACPxB,QAAS,IAEXyB,WAAY,CACVzB,QAAS,GACTS,UAAW,KAEbZ,KAAM,CACJC,cAAe,MACfC,gBAAiB,UACjBE,WAAY,YACZC,SAAU,IAEZC,aAAc,CACZC,aAAc,GACdN,cAAe,SACfO,eAAgB,iBAElBC,KAAM,CACJC,WAAY,OACZH,aAAc,GACdF,SAAU,IAEZwB,UAAW,CACTtB,aAAc,IAEhBI,iBAAkB,CAChBV,cAAe,MACfW,UAAW,GAEbC,iBAAkB,CAChBC,WAAY,GACZT,SAAU,IAEZU,oBAAqB,CACnBL,WAAY,QAEdM,YAAa,CACXf,cAAe,MACfW,UAAW,GAEbK,SAAU,CACRH,WAAY,GACZT,SAAU,IAEZyB,eAAgB,CACdzB,SAAU,IAEZ0B,UAAW,CACT1B,SAAU,IAEZa,aAAc,CACZR,WAAY,QAEdS,gBAAiB,CACflB,cAAe,OAEjBmB,aAAc,CACZV,WAAY,QAEdW,cAAe,CACbP,WAAY,GAEdQ,OAAQ,CACNV,UAAW,GACXL,aAAc,GACdG,WAAY,OACZL,SAAU,IAEZkB,MAAO,CACLI,MAAO,MACPH,OAAQ,OACRjB,aAAc,OAKpByB,IAAKC,SAAS,CACZC,OAAQ,YACRC,MAAO,CACP,CAAEC,IAAK,gFACP,CAAEA,IAAK,2EAA4E1B,WAAY,QC7InG,IAyDe2B,EAzDG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAClCC,EAAgBzD,OAAOD,KAAKa,GAC5B8C,EAAoB,CAAC,GAErBC,EAAS,CACX,KAAQ,UACR,MAAS,UACT,KAAQ,UACR,OAAU,UACV,MAAS,WAT4C,EAYfC,mBAAS,QAZM,mBAYlDC,EAZkD,KAYnCC,EAZmC,KAoBzD,OACI,oCACI,0BAAMnD,UAAU,wBACZ,kBAAC,EAAD,CAAUN,QAAQ,MAClB,uBAAGM,UAAU,oBAAb,mBAGC8C,EAAcpE,KAAI,SAAC0E,EAAKC,GAAO,IAAD,EAC3B,OACI,kBAAC,IAAMC,SAAP,CAAgBvD,IAAKsD,GAEjB,yBAAKtD,IAAKsD,EAAGE,QAAS,WAAQZ,EAAY,2BAAIC,GAAL,IAAeY,OAAQJ,KAAOP,EAAW,GAAG,IAASJ,IAAKgB,OAAQ,qBAAmCL,EAApC,SAAgDM,IAAG,mBAAcN,GAAOpD,UAAU,mBAE3L+C,EAAkBY,SAASN,IACxB,yBAAKrD,UAAU,qBAAf,UACKX,OAAOD,KAAK4D,UADjB,aACK,EAAqBtE,KAAI,SAACkF,GACvB,OAAO,yBACH7D,IAAK6D,EACLL,QAAS,kBAxB7B,SAACK,GACjBT,EAAiBS,GACjB,IAAIC,EAAYb,EAAOY,GACvBjB,EAAY,2BAAIC,GAAL,IAAegB,MAAOC,KAqBkBC,CAAYF,IAC3B/E,GAAI+E,EACJ5D,UAAS,2BAAsBkD,IAAkBU,EAAQ,WAAa,iBC9BnGG,G,OAZA,SAACC,GACd,OACE,4BACET,QAASS,EAAMT,QACfvD,UAAS,iBAA2B,WAAfgE,EAAMC,KAAoB,SAAW,GAAjD,YAAuDD,EAAM/D,OAAS+D,EAAM/D,OAAS,KAE7F+D,EAAME,KACNF,EAAMG,Y,QCsFEC,G,OA1FM,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,YAAazB,EAAiB,EAAjBA,WAAiB,EAE1BI,mBAAS,IAFiB,mBAErDsB,EAFqD,KAE1CC,EAF0C,OAItBvB,oBAAS,GAJa,mBAIrDwB,EAJqD,KAIxCC,EAJwC,OAKhBzB,oBAAS,GALO,mBAKrD0B,EALqD,KAKrCC,EALqC,OAMpB3B,oBAAS,GANW,mBAMrD4B,EANqD,KAMvCC,EANuC,KAQtDC,EAAUC,iBAAO,MACjBC,EAAaD,iBAAO,MACpBE,EAAWF,iBAAO,MA8BxB,OACI,oCACI,0BAAMhF,UAAU,uBACZ,kBAAC,EAAD,CAAUN,QAAQ,MAClB,uBAAGM,UAAU,mBAAb,iBAGA,0BAAMA,UAAU,QACZ,uBAAGA,UAAU,eAAb,cACA,2BAAOmF,QAAQ,QAAQnF,UAAU,gBAAjC,wBAGA,uBAAGA,UAAU,eACRuE,GAEL,2BAAOa,SAAU,SAACnG,GAAD,OA3ChB,SAACA,GACd,GAAGA,EAAEoG,OAAQ,CACT,IAAMC,EAAOrG,EAAEoG,OAAOE,MAAM,GACtBhB,EAAYtF,EAAEoG,OAAOE,MAAM,GAAGzE,KAC9B0E,EAAS,IAAIC,WACnBjB,EAAa,aAAD,OAAcD,EAAUmB,MAAM,EAAG,KAAjC,OAAuCnB,EAAUoB,OAAO,GAAK,MAAQ,GAArE,MACZH,EAAOI,OAAS,SAAC3G,GACbqF,EAAY,2BAAID,GAAL,IAAezC,MAAO3C,EAAEoG,OAAOQ,WAE9CL,EAAOM,cAAcR,IAkCWS,CAAS9G,IAA2Be,UAAU,qBAAqBiE,KAAK,OAAOpF,GAAG,QAAQmH,OAAO,0BAEzH,2BAAOb,QAAQ,OAAOnF,UAAU,eAAhC,QACA,2BAAOiG,IAAKlB,EAASK,SAAU,SAACnG,GAAD,OAAOqF,EAAY,2BAAID,GAAL,kBAAgBpF,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAS,sBAAiByE,EAAc,QAAU,IAAM3D,KAAK,OAAOoF,MAAO7B,EAASvD,OACvL,uBAAGjC,GAAG,YAAYmB,UAAS,4BAAuByE,EAAc,GAAK,WAArE,0BAEA,2BAAOU,QAAQ,UAAUnF,UAAU,eAAnC,WACA,2BAAOiG,IAAKhB,EAAYG,SAAU,SAACnG,GAAD,OAAOqF,EAAY,2BAAID,GAAL,kBAAgBpF,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAS,sBAAiB2E,EAAiB,QAAU,IAAM7D,KAAK,UAAUoF,MAAO7B,EAAS8B,UAChM,uBAAGtH,GAAG,eAAemB,UAAS,4BAAuB2E,EAAiB,GAAK,WAA3E,0BAEA,2BAAOQ,QAAQ,OAAOnF,UAAU,eAAhC,QACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOqF,EAAY,2BAAID,GAAL,kBAAgBpF,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,OAAOoF,MAAO7B,EAAS+B,OAEzI,2BAAOjB,QAAQ,QAAQnF,UAAU,eAAjC,gBACA,2BAAOiG,IAAKf,EAAUE,SAAU,SAACnG,GAAD,OAAOqF,EAAY,2BAAID,GAAL,kBAAgBpF,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASjC,KAAK,SAASjE,UAAS,sBAAiB6E,EAAe,QAAU,IAAM/D,KAAK,QAAQuF,IAAI,YAAYH,MAAO7B,EAASiC,QACxN,uBAAGzH,GAAG,aAAamB,UAAS,4BAAuB6E,EAAe,GAAK,WAAvE,0BAEA,2BAAOM,QAAQ,QAAQnF,UAAU,eAAjC,SACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOqF,EAAY,2BAAID,GAAL,kBAAgBpF,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASjC,KAAK,QAAQjE,UAAU,cAAcc,KAAK,QAAQoF,MAAO7B,EAASkC,SAG3J,6BAASvG,UAAU,kBACf,0BAAMuD,QAAS,kBAAMV,EAAW,KAC5B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,YAG7B,0BAAMV,QAxDA,WACdwB,EAAQrF,QAAQwG,OAChBxB,GAAe,GAEfO,EAAWvF,QAAQwG,OACnBtB,GAAkB,GAElBM,EAASxF,QAAQwG,OACjBpB,GAAgB,GAEjBC,EAAQrF,QAAQwG,OAASjB,EAAWvF,QAAQwG,OAAShB,EAASxF,QAAQwG,OACrErD,EAAW,GAAG,KA8CF,kBAAC,EAAD,CAAQqB,KAAK,oB,QChFtBsC,G,OARW,SAACC,EAAWC,GAElC,IADA,IAAMC,EAAS,GACP/G,EAAI6G,EAAW7G,GAAK8G,EAAU9G,IAClC+G,EAAMC,QAAQhH,GAGlB,OADA+G,EAAMC,QAAQ,KACPD,ICsHIE,EArHG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,WAAYlE,EAAgB,EAAhBA,WAAgB,EAElBI,mBAAS,IAFS,mBAE/C+D,EAF+C,KAEnCC,EAFmC,OAG5BhE,mBAAS,IAHmB,mBAG/CiE,EAH+C,KAGxCC,EAHwC,OAIhBlE,mBAAS,CAC3CmE,KAAM,GACNC,GAAI,KAN8C,mBAI/CC,EAJ+C,KAIlCC,EAJkC,OAQVtE,oBAAS,GARC,mBAQ/CuE,EAR+C,KAQ/BC,EAR+B,KAoChDd,EAAQH,EAAkB,MAAM,IAAIkB,MAAOC,eAEjD,OACI,oCAEA,0BAAM3H,UAAU,wBACZ,6BAASA,UAAS,2BAAsBwH,EAAiB,GAAK,WAC1D,0BAAMI,SAAU,SAAC3I,GAAD,OAAOA,EAAE4I,kBAAkB7H,UAAU,QAEjD,2BAAOmF,QAAQ,aAAanF,UAAU,eAAtC,eACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOgI,EAAchI,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,aAAaoF,MAAOc,IAExG,2BAAO7B,QAAQ,QAAQnF,UAAU,eAAjC,SACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOkI,EAASlI,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,QAAQoF,MAAOgB,IAE9F,2BAAO/B,QAAQ,OAAOnF,UAAU,eAAhC,mBACA,6BAASA,UAAU,iBACf,4BAAQoF,SAAU,SAACnG,GAAD,OAAOsI,EAAe,2BAAID,GAAL,kBAAmBrI,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,OAAOoF,MAAOoB,EAAYF,MAC9IT,EAAMjI,KAAI,SAACoJ,EAAMzE,GACd,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAO4B,GAAOA,OAG7C,4BAAQ1C,SAAU,SAACnG,GAAD,OAAOsI,EAAe,2BAAID,GAAL,kBAAmBrI,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,KAAKoF,MAAOoB,EAAYD,IAC5IV,EAAMjI,KAAI,SAACoJ,EAAMzE,GACd,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAO4B,GAAOA,QAKjD,6BAAS9H,UAAU,kBACf,0BAAMuD,QAAS,kBAAMkE,GAAmBD,KACpC,kBAAC,EAAD,CAAQtD,KAAK,SAASD,KAAK,YAG/B,0BAAMV,QA5DJ,WAClBwD,GAAW,SAAAgB,GAAM,4BACVA,GADU,CAEb,CACIlJ,GAAImJ,KAAKC,SACTnH,KAAMkG,EACNE,MAAOA,EACPE,KAAME,EAAYF,KAClBC,GAAIC,EAAYD,SAGxBJ,EAAc,IACdM,EAAe,IACfJ,EAAS,IACTI,EAAe,CACXH,KAAM,GACNC,GAAI,KAERI,GAAmBD,KA2CC,kBAAC,EAAD,CAAQtD,KAAK,aAM7B,kBAAC,EAAD,CAAUxE,QAAQ,MAClB,uBAAGM,UAAU,oBAAb,aAGC8G,EAAQnB,OAAS,GAElBmB,EAAQpI,KAAI,SAACwJ,EAAQ7E,GAErB,OAAQ,6BAASE,QAAS,kBAtDb,SAAC1E,GAClB,IAAMsJ,EAAarB,EAAQsB,QAAO,SAACF,GAAD,OAAYA,EAAOrJ,KAAOA,KAC5DkI,EAAW,YAAIoB,IAoDqBE,CAAaH,EAAOrJ,KAAKkB,IAAKsD,EAAGrD,UAAU,UAC/D,uBAAGA,UAAU,sBACT,0BAAMA,UAAU,cAAckI,EAAOd,KAArC,OACA,0BAAMpH,UAAU,YAAYkI,EAAOb,KAEvC,uBAAGrH,UAAU,iBACRkI,EAAOhB,OAEZ,uBAAGlH,UAAU,gBACRkI,EAAOpH,UAMxB,0BAAMyC,QAAS,kBAAMkE,GAAmBD,IAAiBxH,UAAU,iBAEnE,6BAASA,UAAU,kBACf,0BAAMuD,QAAS,kBAAMV,EAAW,KAC5B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,YAG7B,0BAAMV,QAAS,kBAAMV,EAAW,GAAG,KAC/B,kBAAC,EAAD,CAAQqB,KAAK,mBC8BlBoE,G,OAzIQ,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAU3F,EAAiB,EAAjBA,WAAiB,EAElBI,mBAAS,IAFS,mBAEjDwF,EAFiD,KAEpCC,EAFoC,OAGxBzF,mBAAS,IAHe,mBAGjD0F,EAHiD,KAGvCC,EAHuC,OAIxB3F,mBAAS,CACrC4F,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,OAAQ,KAR4C,mBAIjDC,EAJiD,KAIvCC,EAJuC,KAUlDvC,EAAQH,EAAkB,MAAM,IAAIkB,MAAOC,eAC3CwB,EAAS,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAXA,EAYZlG,oBAAS,GAZG,mBAYjDuE,EAZiD,KAYjCC,EAZiC,KA2CxD,OACI,oCAEA,0BAAMzH,UAAU,mBACZ,kBAAC,EAAD,CAAUN,QAAQ,MAClB,uBAAGM,UAAU,eAAb,mBAGA,6BAASA,UAAS,sBAAiBwH,EAAiB,GAAK,WACrD,0BAAMI,SAAU,SAAC3I,GAAD,OAAOA,EAAE4I,kBAAkB7H,UAAU,QAEjD,2BAAOmF,QAAQ,cAAcnF,UAAU,eAAvC,gBACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOyJ,EAAezJ,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,cAAcoF,MAAOuC,IAE1G,2BAAOtD,QAAQ,WAAWnF,UAAU,eAApC,YACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAO2J,EAAY3J,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,WAAWoF,MAAOyC,IAEpG,2BAAOxD,QAAQ,YAAYnF,UAAU,eAArC,cACA,6BAASA,UAAU,eACf,4BAAQoF,SAAU,SAACnG,GAAD,OAAOiK,EAAY,2BAAID,GAAL,kBAAgBhK,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,YAAYoF,MAAO+C,EAASJ,WAC1IM,EAAOzK,KAAI,SAAC0K,EAAO/F,GAChB,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAOkD,GAAQA,OAG9C,4BAAQhE,SAAU,SAACnG,GAAD,OAAOiK,EAAY,2BAAID,GAAL,kBAAgBhK,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,WAAWoF,MAAO+C,EAASH,UACzInC,EAAMjI,KAAI,SAACoJ,EAAMzE,GACd,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAO4B,GAAOA,QAKjD,2BAAO3C,QAAQ,UAAUnF,UAAU,eAAnC,YACA,6BAASA,UAAU,aACf,4BAAQoF,SAAU,SAACnG,GAAD,OAAOiK,EAAY,2BAAID,GAAL,kBAAgBhK,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,UAAUoF,MAAO+C,EAASF,SACxII,EAAOzK,KAAI,SAAC0K,EAAO/F,GAChB,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAOkD,GAAQA,OAG9C,4BAAQhE,SAAU,SAACnG,GAAD,OAAOiK,EAAY,2BAAID,GAAL,kBAAgBhK,EAAEoG,OAAOvE,KAAO7B,EAAEoG,OAAOa,UAASlG,UAAU,cAAcc,KAAK,SAASoF,MAAO+C,EAASD,QACvIrC,EAAMjI,KAAI,SAACoJ,EAAMzE,GACd,OAAO,4BAAQtD,IAAKsD,EAAG6C,MAAO4B,GAAOA,QAIjD,6BAAS9H,UAAU,kBACf,0BAAMuD,QAAS,kBAAMkE,GAAmBD,KACpC,kBAAC,EAAD,CAAQtD,KAAK,SAASD,KAAK,YAG/B,0BAAMV,QA9EH,WACnBiF,GAAS,SAAAT,GAAM,4BACRA,GADQ,CAEX,CACIlJ,GAAImJ,KAAKC,SACTnH,KAAM2H,EACNE,SAAUA,EACVE,UAAWI,EAASJ,UACpBC,SAAUG,EAASH,SACnBC,QAASE,EAASF,QAClBC,OAAQC,EAASD,aAGzBN,EAAe,IACfQ,EAAY,CACRL,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,OAAQ,KAEZJ,EAAY,IACZnB,GAAmBD,KA0DC,kBAAC,EAAD,CAAQtD,KAAK,aAO5BqE,EAAM5C,OAAS,GAEhB4C,EAAM7J,KAAI,SAAC2K,EAAMhG,GAEjB,OAAQ,6BAASE,QAAS,kBAlEZ,SAAC1E,GACnB,IAAMyK,EAAWf,EAAMH,QAAO,SAACiB,GAAD,OAAUA,EAAKxK,KAAOA,KACpD2J,EAAS,YAAIc,IAgEuBC,CAAcF,EAAKxK,KAAKkB,IAAKsD,EAAGrD,UAAU,UAC9D,uBAAGA,UAAU,sBACT,0BAAMA,UAAU,cAAhB,UAAiCqJ,EAAKR,UAAtC,YAAmDQ,EAAKP,UAAxD,OACA,0BAAM9I,UAAU,YAAhB,UAA+BqJ,EAAKN,QAApC,YAA+CM,EAAKL,UAExD,uBAAGhJ,UAAU,iBACRqJ,EAAKV,UAEV,uBAAG3I,UAAU,gBACRqJ,EAAKvI,UAMtB,0BAAMyC,QAAS,kBAAMkE,GAAmBD,IAAiBxH,UAAU,iBAGnE,6BAASA,UAAU,kBACf,0BAAMuD,QAAS,kBAAMV,EAAW,KAC5B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,YAG7B,0BAAMV,QAAS,kBAAMV,EAAW,GAAG,KAC/B,kBAAC,EAAD,CAAQqB,KAAK,oBC1ClBsF,G,OAxFG,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,aAAc7G,EAAiB,EAAjBA,WAAiB,EAE3BI,mBAAS,IAFkB,mBAEpD0G,EAFoD,KAE1CC,EAF0C,OAGjC3G,mBAAS,IAHwB,mBAGpD4G,EAHoD,KAG7CC,EAH6C,OAIf7G,oBAAS,GAJM,mBAIpDuE,EAJoD,KAIpCC,EAJoC,KAyB3D,OACI,oCAEA,0BAAMzH,UAAU,wBACZ,kBAAC,EAAD,CAAUN,QAAQ,MAClB,uBAAGM,UAAU,eAAb,aAGA,6BAASA,UAAS,2BAAsBwH,EAAiB,GAAK,WAC1D,0BAAMI,SAAU,SAAC3I,GAAD,OAAOA,EAAE4I,kBAAkB7H,UAAU,QAEjD,2BAAOmF,QAAQ,WAAWnF,UAAU,eAApC,YACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAO2K,EAAY3K,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,WAAWoF,MAAOyD,IAEpG,2BAAOxE,QAAQ,QAAQnF,UAAU,eAAjC,sBACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAO6K,EAAS7K,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,QAAQoF,MAAO2D,IAG9F,6BAAS7J,UAAU,kBACf,0BAAMuD,QAAS,kBAAMkE,GAAmBD,KACpC,kBAAC,EAAD,CAAQtD,KAAK,SAASD,KAAK,YAG/B,0BAAMV,QA1CF,WACpBmG,GAAa,SAAA3B,GAAM,4BACZA,GADY,CAEf,CACIlJ,GAAImJ,KAAKC,SACT0B,SAAUA,EACVE,MAAOA,QAGfD,EAAY,IACZE,EAAS,IACTrC,GAAmBD,KAgCC,kBAAC,EAAD,CAAQtD,KAAK,aAM5BuF,EAAU9D,OAAS,GAEpB8D,EAAU/K,KAAI,SAACiL,EAAUtG,GAEzB,OAAQ,6BAASE,QAAS,kBAvCX,SAAC1E,GACpB,IAAMkL,EAAeN,EAAUrB,QAAO,SAACuB,GAAD,OAAcA,EAAS9K,KAAOA,KACpE6K,EAAa,YAAIK,IAqCmBC,CAAeL,EAAS9K,KAAKkB,IAAKsD,EAAGrD,UAAU,kBACnE,uBAAGA,UAAU,kBACR2J,EAASA,UAEd,uBAAG3J,UAAU,mBACR2J,EAASE,WAO1B,0BAAMtG,QAAS,kBAAMkE,GAAmBD,IAAiBxH,UAAU,iBAGnE,6BAASA,UAAU,kBACf,0BAAMuD,QAAS,kBAAMV,EAAW,KAC5B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,YAG7B,0BAAMV,QAAS,kBAAMV,EAAW,GAAG,KAC/B,kBAAC,EAAD,CAAQqB,KAAK,oBCDlB+F,G,OA/EA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,UAAWtH,EAAiC,EAAjCA,WAAYuH,EAAqB,EAArBA,eAAqB,EAExCnH,mBAAS,IAF+B,mBAE3DoH,EAF2D,KAEpDC,EAFoD,OAGtBrH,oBAAS,GAHa,mBAG3DuE,EAH2D,KAG3CC,EAH2C,KAsBlE,OACI,oCAEA,0BAAMzH,UAAU,qBACZ,kBAAC,EAAD,CAAUN,QAAQ,MAClB,uBAAGM,UAAU,eAAb,qBAGA,6BAASA,UAAS,wBAAmBwH,EAAiB,GAAK,WACvD,0BAAMI,SAAU,SAAC3I,GAAD,OAAOA,EAAE4I,kBAAkB7H,UAAU,QAEjD,2BAAOmF,QAAQ,QAAQnF,UAAU,eAAjC,SACA,2BAAOoF,SAAU,SAACnG,GAAD,OAAOqL,EAASrL,EAAEoG,OAAOa,QAAQlG,UAAU,cAAcc,KAAK,QAAQoF,MAAOmE,IAE9F,6BAASrK,UAAU,kBACf,0BAAMuD,QAAS,kBAAMkE,GAAmBD,KACpC,kBAAC,EAAD,CAAQtD,KAAK,SAASD,KAAK,YAG/B,0BAAMV,QApCL,WACjB4G,GAAU,SAAApC,GAAM,4BACTA,GADS,CAEZ,CACIlJ,GAAImJ,KAAKC,SACToC,MAAOA,QAGfC,EAAS,IACT7C,GAAmBD,KA4BC,kBAAC,EAAD,CAAQtD,KAAK,aAM5BgG,EAAOvE,OAAS,GAEjBuE,EAAOxL,KAAI,SAAC2L,EAAOhH,GAEnB,OAAQ,6BAASE,QAAS,kBAnCd,SAAC1E,GACjB,IAAM0L,EAAYL,EAAO9B,QAAO,SAACiC,GAAD,OAAWA,EAAMxL,KAAOA,KACxDsL,EAAU,YAAII,IAiCsBC,CAAYH,EAAMxL,KAAKkB,IAAKsD,EAAGrD,UAAU,eAC7D,uBAAGA,UAAU,eACRqK,EAAMA,WAOvB,0BAAM9G,QAAS,kBAAMkE,GAAmBD,IAAiBxH,UAAU,iBAGnE,6BAASA,UAAU,kBACf,0BAAMuD,QAAS,kBAAMV,EAAW,KAC5B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,YAG7B,0BAAMV,QAAS,WAAOV,EAAW,GAAG,GAAOuH,GAAe,KACtD,kBAAC,EAAD,CAAQlG,KAAK,oBC0BlBuG,G,OAjGG,SAAC,GAAqD,IAAnDpG,EAAkD,EAAlDA,SAAUyC,EAAwC,EAAxCA,QAASyB,EAA+B,EAA/BA,MAAOkB,EAAwB,EAAxBA,UAAWS,EAAa,EAAbA,OACtD,OACI,kBAAC,IAAD,CAAMQ,KAAK,KAAKC,MAAO1K,EAAO,GAAGI,MAC7B,kBAAC,IAAD,CAAMsK,MAAO1K,EAAO,GAAGU,cACnB,kBAAC,IAAD,CAAMgK,MAAO1K,EAAO,GAAG2K,UACnB,kBAAC,IAAD,CAAMD,MAAO1K,EAAO,GAAGa,MACnB,kBAAC,IAAD,KAAOuD,EAASvD,MAChB,kBAAC,IAAD,KAAOuD,EAAS8B,UAEpB,kBAAC,IAAD,CAAMwE,MAAO1K,EAAO,GAAG4K,MACnB,kBAAC,IAAD,KAAOxG,EAASkC,OAChB,kBAAC,IAAD,KAAOlC,EAASiC,OAChB,kBAAC,IAAD,KAAOjC,EAAS+B,QAGvB/B,EAASzC,MAAQ,kBAAC,IAAD,CAAO+I,MAAO1K,EAAO,GAAG2B,MAAOa,IAAK4B,EAASzC,QAAY,MAG/E,kBAAC,IAAD,CAAM+I,MAAO1K,EAAO,GAAG0B,QAClBmF,EAAQnB,OAAS,GAAK,aAE3B,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGiC,WAClB4E,EAAQpI,KAAI,SAACwJ,GACV,OACI,kBAAC,IAAD,CAAMyC,MAAO1K,EAAO,GAAGe,kBACnB,kBAAC,IAAD,CAAM2J,MAAO1K,EAAO,GAAGkC,gBACnB,kBAAC,IAAD,KACK+F,EAAOd,KADZ,MACqBc,EAAOb,KAGhC,kBAAC,IAAD,CAAMsD,MAAO1K,EAAO,GAAGiB,kBACnB,kBAAC,IAAD,CAAMyJ,MAAO1K,EAAO,GAAGmB,qBAClB8G,EAAOpH,MAEZ,kBAAC,IAAD,CAAM6J,MAAO1K,EAAO,GAAG6K,eAClB5C,EAAOhB,aAQhC,kBAAC,IAAD,CAAMyD,MAAO1K,EAAO,GAAG0B,QAClB4G,EAAM5C,OAAS,GAAK,mBAEzB,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGoJ,MAClBd,EAAM7J,KAAI,SAAC2K,GACR,OACI,kBAAC,IAAD,CAAMsB,MAAO1K,EAAO,GAAGoB,aACnB,kBAAC,IAAD,CAAMsJ,MAAO1K,EAAO,GAAGmC,WACnB,kBAAC,IAAD,KACKiH,EAAKR,UADV,IACsBQ,EAAKP,SAD3B,KACuC,IAClCO,EAAKN,QAFV,IAEoBM,EAAKL,SAG7B,kBAAC,IAAD,CAAM2B,MAAO1K,EAAO,GAAGqB,UACnB,kBAAC,IAAD,CAAMqJ,MAAO1K,EAAO,GAAGsB,cAClB8H,EAAKV,UAEV,kBAAC,IAAD,CAAMgC,MAAO1K,EAAO,GAAG8K,iBAClB1B,EAAKvI,YAQ9B,kBAAC,IAAD,CAAM6J,MAAO1K,EAAO,GAAG0B,QAClB8H,EAAU9D,OAAS,GAAK,aAE7B,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGwJ,WAClBA,EAAU/K,KAAI,SAACiL,GACZ,OACI,kBAAC,IAAD,CAAMgB,MAAO1K,EAAO,GAAGuB,iBACnB,kBAAC,IAAD,CAAMmJ,MAAO1K,EAAO,GAAGwB,cAClBkI,EAASA,UAEd,kBAAC,IAAD,CAAMgB,MAAO1K,EAAO,GAAGyB,eAAvB,KACOiI,EAASE,YAOhC,kBAAC,IAAD,CAAMc,MAAO1K,EAAO,GAAG0B,QAClBuI,EAAOvE,OAAS,GAAK,qBAEzBuE,EAAOxL,KAAI,SAAC2L,EAAOhH,GAChB,OAAO,kBAAC,IAAD,CAAMtD,IAAKsD,GAAIgH,EAAMA,aCa7BW,EAxGG,SAAC,GAA+D,IAA7DpI,EAA4D,EAA5DA,SAAUyB,EAAkD,EAAlDA,SAAUyC,EAAwC,EAAxCA,QAASyB,EAA+B,EAA/BA,MAAOkB,EAAwB,EAAxBA,UAAWS,EAAa,EAAbA,OAChE,OACI,kBAAC,IAAD,CAAMQ,KAAK,KAAKC,MAAO1K,EAAO,GAAGI,MAC7B,kBAAC,IAAD,CACIsK,MAAK,2BACE1K,EAAO,GAAG8B,WADZ,IAEDxB,gBAAiBqC,EAASgB,SAG7BS,EAASzC,MAAQ,kBAAC,IAAD,CAAO+I,MAAO1K,EAAO,GAAG2B,MAAOa,IAAK4B,EAASzC,QAAY,KAC3E,kBAAC,IAAD,CAAM+I,MAAO1K,EAAO,GAAGU,cACnB,kBAAC,IAAD,CAAMgK,MAAO1K,EAAO,GAAGa,MACnB,kBAAC,IAAD,KAAOuD,EAASvD,MAChB,kBAAC,IAAD,KAAOuD,EAAS8B,UAEpB,kBAAC,IAAD,CAAMwE,MAAO1K,EAAO,GAAG4K,MACnB,kBAAC,IAAD,KAAOxG,EAASkC,OAChB,kBAAC,IAAD,KAAOlC,EAASiC,OAChB,kBAAC,IAAD,KAAOjC,EAAS+B,QAIxB,kBAAC,IAAD,CAAMuE,MAAO1K,EAAO,GAAG0B,QAClB8H,EAAU9D,OAAS,GAAK,aAE7B,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGwJ,WAClBA,EAAU/K,KAAI,SAACiL,EAAUtG,GACtB,OACI,kBAAC,IAAD,CAAMtD,IAAKsD,EAAGsH,MAAO1K,EAAO,GAAGuB,iBAC3B,kBAAC,IAAD,CAAMmJ,MAAO1K,EAAO,GAAGwB,cAClBkI,EAASA,UAEd,kBAAC,IAAD,CAAMgB,MAAO1K,EAAO,GAAGyB,eAAvB,KACOiI,EAASE,YAOhC,kBAAC,IAAD,CAAMc,MAAO1K,EAAO,GAAG0B,QAClBuI,EAAOvE,OAAS,GAAK,qBAEzBuE,EAAOxL,KAAI,SAAC2L,EAAOhH,GAChB,OAAO,kBAAC,IAAD,CAAMtD,IAAKsD,GAAIgH,EAAMA,WAIpC,kBAAC,IAAD,CAAMM,MAAO1K,EAAO,GAAGgC,YACnB,kBAAC,IAAD,CAAM0I,MAAO1K,EAAO,GAAG0B,QAClBmF,EAAQnB,OAAS,GAAK,aAE3B,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGiC,WAClB4E,EAAQpI,KAAI,SAACwJ,GACV,OACI,kBAAC,IAAD,CAAMyC,MAAO1K,EAAO,GAAGe,kBACnB,kBAAC,IAAD,CAAM2J,MAAO1K,EAAO,GAAGkC,gBACnB,kBAAC,IAAD,KACK+F,EAAOd,KADZ,MACqBc,EAAOb,KAGhC,kBAAC,IAAD,CAAMsD,MAAO1K,EAAO,GAAGiB,kBACnB,kBAAC,IAAD,CAAMyJ,MAAO1K,EAAO,GAAGmB,qBAClB8G,EAAOpH,MAEZ,kBAAC,IAAD,CAAM6J,MAAO1K,EAAO,GAAG6K,eAClB5C,EAAOhB,aAQhC,kBAAC,IAAD,CAAMyD,MAAO1K,EAAO,GAAG0B,QAClB4G,EAAM5C,OAAS,GAAK,mBAEzB,kBAAC,IAAD,CAAMgF,MAAO1K,EAAO,GAAGoJ,MAClBd,EAAM7J,KAAI,SAAC2K,GACR,OACI,kBAAC,IAAD,CAAMsB,MAAO1K,EAAO,GAAGoB,aACnB,kBAAC,IAAD,CAAMsJ,MAAO1K,EAAO,GAAGmC,WACnB,kBAAC,IAAD,KACKiH,EAAKR,UADV,IACsBQ,EAAKP,SAD3B,KACuC,IAClCO,EAAKN,QAFV,IAEoBM,EAAKL,SAG7B,kBAAC,IAAD,CAAM2B,MAAO1K,EAAO,GAAGqB,UACnB,kBAAC,IAAD,CAAMqJ,MAAO1K,EAAO,GAAGsB,cAClB8H,EAAKV,UAEV,kBAAC,IAAD,CAAMgC,MAAO1K,EAAO,GAAG8K,iBAClB1B,EAAKvI,eClF/BmK,EATI,SAACjH,GAChB,IAAIkH,EAKJ,MAJ8B,MAA1BlH,EAAMpB,SAASY,SACf0H,EAAkB,kBAAC,EAAclH,IACP,MAA1BA,EAAMpB,SAASY,SACf0H,EAAkB,kBAAC,EAAclH,IAC9B,kBAAC,IAAD,KAAWkH,IC6BPC,EAlCE,SAAC,GAA2E,IAAzEvI,EAAwE,EAAxEA,SAAUyB,EAA8D,EAA9DA,SAAUyC,EAAoD,EAApDA,QAASyB,EAA2C,EAA3CA,MAAOkB,EAAoC,EAApCA,UAAWS,EAAyB,EAAzBA,OAAQrH,EAAiB,EAAjBA,WAEvE,OACE,0BAAM7C,UAAU,uBACd,uBAAGA,UAAU,mBAAb,oBAEA,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEoL,SACE,kBAAC,EAAD,CACExI,SAAUA,EACVyB,SAAUA,EACVyC,QAASA,EACTyB,MAAOA,EACPkB,UAAWA,EACXS,OAAQA,IAGZmB,SAAQ,UAAKhH,EAASvD,KAAd,eAEP,qBAAGwK,QACQ,aAAe,eAI/B,6BAAStL,UAAU,kBACjB,0BAAMuD,QAAS,kBAAMV,EAAW,KAC9B,kBAAC,EAAD,CAAQqB,KAAK,OAAOD,KAAK,e,SCnBtBsH,EAbO,WAAO,IAAD,EACFtI,mBAAS,CAAC,EAAG,IADX,mBACnByH,EADmB,KACbc,EADa,KAU1B,OARAC,2BAAgB,WACd,IAAMC,EAAa,WACjBF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,eAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIhB,GC2HMsB,EAnHF,SAAC,GAAoD,IAAlDnJ,EAAiD,EAAjDA,WAAYoJ,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAAoB,EAE7BjJ,mBAAS,CAAEW,MAAO,UAAWJ,OAAQ,MAFR,mBAEtDZ,EAFsD,KAE5CD,EAF4C,OAG7BM,mBAAS,CACrCnC,KAAM,GACNqF,QAAS,GACTC,KAAM,GACNE,MAAO,GACPC,MAAO,GACP3E,MAAO,KATkD,mBAGtDyC,EAHsD,KAG5CC,EAH4C,OAW/BrB,mBAAS,IAXsB,mBAWtD6D,EAXsD,KAW7CC,EAX6C,OAYnC9D,mBAAS,IAZ0B,mBAYtDsF,EAZsD,KAY/CC,EAZ+C,OAa3BvF,mBAAS,IAbkB,mBAatDwG,EAbsD,KAa3CC,EAb2C,OAcjCzG,mBAAS,IAdwB,mBActDiH,EAdsD,KAc9CC,EAd8C,OAevBlH,oBAAS,GAfc,mBAetDkJ,EAfsD,KAezC/B,EAfyC,OAgB/CmB,IAATvJ,EAhBwD,oBAmB7D,OAFAA,EAAQA,EAAQ,IAAMA,EAAQA,EAAQ,IAGlC,oCACI,0BAAMhC,UAAU,mBACZ,uBAAGA,UAAU,cAAb,0CAGA,0BAAMuD,QAAS,kBAAMV,EAAW,GAAG,KAC/B,kBAAC,EAAD,CAAQqB,KAAK,eAEjB,uBAAGlE,UAAU,gBAAb,wBACA,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,gBAAb,gBAGJ,kBAAC,IAAD,CACIoL,SACI,kBAAC,EAAD,CACIxI,SAAUA,EACVyB,SAAUA,EACVyC,QAASA,EACTyB,MAAOA,EACPkB,UAAWA,EACXS,OAAQA,MAIf,YAAc,IAAXkC,EAAU,EAAVA,IACA,OACI,yBACIpM,UAAS,6BACLkM,EAAgB,UAAY,IAEhCvB,MAAO,CACH0B,UAAWJ,IAGf,kBAAC,IAAD,CAAUjM,UAAU,oBAAoBsF,KAAM8G,GAC1C,kBAAC,IAAD,CACIpK,MAAOA,EACPsK,MAAO,GACPtM,UAAU,gBACVuM,WAAY,SAQpC,kBAAC,EAAD,CACI3J,SAAUA,EACVD,YAAaA,EACbE,WAAYA,IAEhB,kBAAC,EAAD,CACIwB,SAAUA,EACVC,YAAaA,EACbzB,WAAYA,IAEhB,kBAAC,EAAD,CACIiE,QAASA,EACTC,WAAYA,EACZlE,WAAYA,IAEhB,kBAAC,EAAD,CACI0F,MAAOA,EACPC,SAAUA,EACV3F,WAAYA,IAEhB,kBAAC,EAAD,CACI4G,UAAWA,EACXC,aAAcA,EACd7G,WAAYA,IAEhB,kBAAC,EAAD,CACIqH,OAAQA,EACRC,UAAWA,EACXC,eAAgBA,EAChBvH,WAAYA,IAGfsJ,GACG,kBAAC,EAAD,CACIvJ,SAAUA,EACVyB,SAAUA,EACVyC,QAASA,EACTyB,MAAOA,EACPkB,UAAWA,EACXS,OAAQA,EACRrH,WAAYA,MCrHjB2J,G,OARF,WACT,OACI,uBAAGxM,UAAU,QAAb,cCoCOyM,EAnCH,WAEV,IAAMC,EAAS1H,iBAAO,MAFN,EAG8B/B,mBAAS,iBAHvC,mBAGTgJ,EAHS,KAGQU,EAHR,OAI0B1J,oBAAS,GAJnC,mBAITiJ,EAJS,KAIMU,EAJN,KAchB,OACI,oCACI,kBAAC,EAAD,CACIrJ,QAAS,kBAAMqJ,GAAkBV,IACjCjM,OAAM,kBACNiE,KAAMgI,EAAgB,QAAU,YAGpC,kBAAC,EAAD,MAEA,yBAAKjG,IAAKyG,EAAQ1M,UAAU,kBACxB,kBAAC,EAAD,CACI6C,WAnBG,SAACgK,GAAoC,IAAvBC,EAAsB,wDACrDnB,OAAOoB,SAAS,EAAG,GACnB,IAAMC,EAAoB,sBAATF,EAA2BD,EAAc,EAA0BA,EAAc,EAAxE,SAC1BH,EAAOhN,QAAQiL,MAAM0B,UAAYW,EACjCL,EAA4B,qBAATG,EAA0BD,EAAc,EAAyBA,EAAc,EAAtE,WAgBdZ,gBAAiBA,EACjBC,cAAeA,OCtBbe,QACW,cAA7BtB,OAAOuB,SAASC,UAEe,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bc1a1167.chunk.js","sourcesContent":["var map = {\n\t\"./template_0.PNG\": 433,\n\t\"./template_1.PNG\": 434\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 432;","module.exports = __webpack_public_path__ + \"static/media/template_0.489aa807.PNG\";","module.exports = __webpack_public_path__ + \"static/media/template_1.27814e11.PNG\";","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst StepDots = ({current}) => {\r\n\r\n    let a = [];\r\n    for(let i=0; i<6; i++) {\r\n        if(i<parseInt(current)) {\r\n            a.push(<span key={i} className=\"dot filled\"></span>);\r\n        }\r\n        else {\r\n            a.push(<span key={i} className=\"dot\" ></span>)   ;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"dots\">\r\n            {a}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default StepDots;","import { Font, StyleSheet } from '@react-pdf/renderer';\r\n\r\n\r\nexport const styles = StyleSheet.create({\r\n    0: {\r\n      page: {\r\n          flexDirection: 'column',\r\n          backgroundColor: '#FFFFFF',\r\n          padding: 30,\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 15\r\n        },\r\n        personalData: {\r\n          marginBottom: 50,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between'\r\n        },\r\n        name: {\r\n          fontWeight: 'bold',\r\n          marginBottom: 20,\r\n          fontSize: 22\r\n        },\r\n        educationElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        educationSchools: {\r\n          marginLeft: 10\r\n        },\r\n        educationSchoolName: {\r\n          fontWeight: 'bold'\r\n        },\r\n        workElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        workInfo: {\r\n          marginLeft: 10\r\n        },\r\n        workPosition: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageElement: {\r\n          flexDirection: 'row'\r\n        },\r\n        languageName: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageLevel: {\r\n          marginLeft: 5\r\n        },\r\n        header: {\r\n          marginTop: 20,\r\n          marginBottom: 10,\r\n          fontWeight: 'bold',\r\n          fontSize: 20\r\n        },\r\n        photo: {\r\n          height: 150\r\n        }\r\n    },\r\n    1: {\r\n      leftPanel: {\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        width: '35%',\r\n        padding: 20\r\n      },\r\n      rightPanel: {\r\n        padding: 30,\r\n        marginTop: 150\r\n      },\r\n      page: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#FFFFFF',\r\n        fontFamily: 'Open Sans',\r\n        fontSize: 13\r\n      },\r\n      personalData: {\r\n        marginBottom: 30,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n      },\r\n      name: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        fontSize: 22\r\n      },\r\n      education: {\r\n        marginBottom: 60\r\n      },\r\n      educationElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      educationSchools: {\r\n        marginLeft: 10,\r\n        fontSize: 12\r\n      },\r\n      educationSchoolName: {\r\n        fontWeight: 'bold'\r\n      },\r\n      workElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      workInfo: {\r\n        marginLeft: 10,\r\n        fontSize: 12\r\n      },\r\n      educationYears: {\r\n        fontSize: 12\r\n      },\r\n      workYears: {\r\n        fontSize: 12\r\n      },\r\n      workPosition: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageElement: {\r\n        flexDirection: 'row'\r\n      },\r\n      languageName: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageLevel: {\r\n        marginLeft: 5\r\n      },\r\n      header: {\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: 20\r\n      },\r\n      photo: {\r\n        width: \"90%\",\r\n        height: 'auto',\r\n        marginBottom: 10\r\n      }\r\n    }\r\n  });\r\n\r\n  Font.register({\r\n    family: 'Open Sans',\r\n    fonts: [\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-regular.ttf' },\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-600.ttf', fontWeight: 600 }\r\n    ]\r\n    });","import React, { useState } from 'react';\r\nimport './index.scss';\r\nimport StepInfo from '../StepInfo/index';\r\nimport { styles } from '../CvDocument/styles'\r\n\r\nconst Templates = ({ setTemplate, template, changeStep }) => {\r\n    const templatesList = Object.keys(styles);\r\n    const colorfulTemplates = [1];\r\n\r\n    const colors = {\r\n        'gray': \"#e6e6e6\", \r\n        'green': \"#90C999\", \r\n        'blue': \"#91BDC7\", \r\n        'yellow': \"#F1F37B\", \r\n        'brown': \"#AD8E7D\",\r\n    };\r\n\r\n    const [selectedColor, setSelectedColor] = useState(\"gray\");\r\n\r\n    const selectColor = (color) => {\r\n        setSelectedColor(color);\r\n        let colorCode = colors[color];\r\n        setTemplate({...template, color: colorCode});\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <main className=\"templates__container\">\r\n                <StepInfo current=\"1\" />\r\n                <p className=\"templates__title\">\r\n                    Choose template\r\n                </p>\r\n                {templatesList.map((tem, q) => {\r\n                    return (\r\n                        <React.Fragment key={q}>\r\n        \r\n                            <img key={q} onClick={() => { setTemplate({...template, number: tem}); changeStep(1, true) }} src={require(`../../assets/templates/template_${tem}.PNG`)} alt={`template_${tem}`} className=\"templates__img\"/>\r\n                            \r\n                           { colorfulTemplates.includes(q) &&\r\n                                <div className=\"templates__colors\">\r\n                                    {Object.keys(colors)?.map((color) => {\r\n                                        return <div\r\n                                            key={color} \r\n                                            onClick={() => selectColor(color)} \r\n                                            id={color} \r\n                                            className={`templates__color ${selectedColor === color ? \"selected\" : \"\"}`} \r\n                                        />\r\n                                    })}\r\n                                </div>\r\n                            }\r\n\r\n                        </React.Fragment>\r\n                    )\r\n                })}\r\n                \r\n            </main>\r\n            \r\n           \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Templates;","import React from \"react\";\r\nimport \"./index.scss\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={`button ${props.type === \"cancel\" ? \"cancel\" : \"\"} ${props.styles ? props.styles : ''}`}\r\n    >\r\n      {props.text}\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useRef } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst PersonalData = ({ personal, setPersonal, changeStep }) => {\r\n\r\n    const [photoName, setPhotoName] = useState(\"\");\r\n\r\n    const [isNameError, setIsNameError] = useState(false);\r\n    const [isSurnameError, setIsSurnameError] = useState(false);\r\n    const [isPhoneError, setIsPhoneError] = useState(false);\r\n\r\n    const nameRef = useRef(null);\r\n    const surnameRef = useRef(null);\r\n    const phoneRef = useRef(null);\r\n    \r\n    const setPhoto = (e) => {\r\n        if(e.target) {\r\n            const file = e.target.files[0];\r\n            const photoName = e.target.files[0].name;\r\n            const reader = new FileReader();\r\n            setPhotoName(`Uploaded (${photoName.slice(0, 20)}${photoName.length>20 ? \"...\" : \"\"})`);\r\n            reader.onload = (e) => {\r\n                setPersonal({...personal, photo: e.target.result});\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const checkValidity = () => {\r\n        if(!nameRef.current.value) {\r\n            setIsNameError(true);\r\n        }\r\n        if(!surnameRef.current.value) {\r\n            setIsSurnameError(true);\r\n        }\r\n        if(!phoneRef.current.value) {\r\n            setIsPhoneError(true);\r\n        }\r\n        if(nameRef.current.value && surnameRef.current.value && phoneRef.current.value) {\r\n            changeStep(2, true);\r\n        }\r\n    }\r\n    \r\n    return ( \r\n        <>\r\n            <main className=\"personal__container\">\r\n                <StepInfo current=\"2\" />\r\n                <p className=\"personal__title\">\r\n                    Personal data\r\n                </p>\r\n                <form className=\"form\">\r\n                    <p className=\"form__label\">Your photo</p>\r\n                    <label htmlFor=\"photo\" className=\"photo__input\">\r\n                        Click here to upload\r\n                    </label>\r\n                    <p className=\"photo__name\">\r\n                        {photoName}\r\n                    </p>\r\n                    <input onChange={(e) => setPhoto(e, setPersonal, personal)} className=\"form__input hidden\" type=\"file\" id=\"photo\" accept=\"image/png, image/jpeg\" />\r\n                    \r\n                    <label htmlFor=\"name\" className=\"form__label\">Name</label>\r\n                    <input ref={nameRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className={`form__input ${isNameError ? \"error\" : \"\"}`} name=\"name\" value={personal.name} />\r\n                    <p id=\"nameError\" className={`form__input-error ${isNameError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"surname\" className=\"form__label\">Surname</label>\r\n                    <input ref={surnameRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className={`form__input ${isSurnameError ? \"error\" : \"\"}`} name=\"surname\" value={personal.surname}/>\r\n                    <p id=\"surnameError\" className={`form__input-error ${isSurnameError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"city\" className=\"form__label\">City</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className=\"form__input\" name=\"city\" value={personal.city}/>\r\n\r\n                    <label htmlFor=\"phone\" className=\"form__label\">Phone number</label>\r\n                    <input ref={phoneRef} onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"number\" className={`form__input ${isPhoneError ? \"error\" : \"\"}`} name=\"phone\" max=\"999999999\" value={personal.phone}/>\r\n                    <p id=\"phoneError\" className={`form__input-error ${isPhoneError ? \"\" : \"hidden\"}`}>This field is required</p>\r\n\r\n                    <label htmlFor=\"email\" className=\"form__label\">Email</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"email\" className=\"form__input\" name=\"email\" value={personal.email}/>\r\n                </form>\r\n\r\n                <section className=\"form__controls\">\r\n                    <span onClick={() => changeStep(2)}>\r\n                        <Button text=\"Back\" type=\"cancel\" />\r\n                    </span>\r\n        \r\n                    <span onClick={checkValidity}> \r\n                        <Button text=\"Next step\" />\r\n                    </span>\r\n                </section>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default PersonalData;","const getYearsFromRange = (firstYear, lastYear) => {\r\n    const years =  [];\r\n    for(let i = firstYear; i <= lastYear; i++) {\r\n        years.unshift(i);\r\n    }\r\n    years.unshift(' ');\r\n    return years;\r\n}\r\nexport default getYearsFromRange;\r\n","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Education = ({ schools, setSchools, changeStep}) => {\r\n\r\n    const [schoolName, setSchoolName] = useState('');\r\n    const [major, setMajor] = useState('');\r\n    const [schoolYears, setSchoolYears] = useState({\r\n        from: '',\r\n        to: ''\r\n    });\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewSchool = () => {\r\n        setSchools(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                name: schoolName,\r\n                major: major,\r\n                from: schoolYears.from,\r\n                to: schoolYears.to\r\n            }\r\n        ]);\r\n        setSchoolName('');\r\n        setSchoolYears('');\r\n        setMajor('');\r\n        setSchoolYears({\r\n            from: '',\r\n            to: ''\r\n        });\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteSchool = (id) => {\r\n        const newSchools = schools.filter((school) => school.id !== id);\r\n        setSchools([...newSchools]);\r\n    }\r\n\r\n    const years = getYearsFromRange(1950, new Date().getFullYear());\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"education__container\">\r\n            <section className={`education__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"schoolname\" className=\"form__label\">School name</label>\r\n                    <input onChange={(e) => setSchoolName(e.target.value)} className=\"form__input\" name=\"schoolname\" value={schoolName} />\r\n\r\n                    <label htmlFor=\"major\" className=\"form__label\">Major</label>\r\n                    <input onChange={(e) => setMajor(e.target.value)} className=\"form__input\" name=\"major\" value={major} />\r\n\r\n                    <label htmlFor=\"from\" className=\"form__label\">Education years</label>\r\n                    <section className=\"school__years\">\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"from\" value={schoolYears.from}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"to\" value={schoolYears.to}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewSchool}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n            <StepInfo current=\"3\"/>\r\n            <p className=\"education__title\">\r\n                Education\r\n            </p>\r\n            {schools.length > 0 && \r\n            \r\n            schools.map((school, q) => {\r\n        \r\n            return  <article onClick={() => deleteSchool(school.id)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{school.from} - </span>\r\n                            <span className=\"years-to\">{school.to}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {school.major}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {school.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(3)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(3, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Education;","import React, { useState } from 'react';\r\nimport './index.scss'\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport Button from '../Button/index';\r\n\r\n\r\nconst WorkExperience = ({ works, setWorks, changeStep }) => {\r\n    \r\n    const [companyName, setCompanyName] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [workDate, setWorkDate] = useState({\r\n        monthFrom: '',\r\n        yearFrom: '',\r\n        monthTo: '',\r\n        yearTo: ''\r\n    });\r\n    const years = getYearsFromRange(1960, new Date().getFullYear());\r\n    const months = [' ', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewCompany = () => {\r\n        setWorks(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                name: companyName,\r\n                position: position,\r\n                monthFrom: workDate.monthFrom,\r\n                yearFrom: workDate.yearFrom,\r\n                monthTo: workDate.monthTo,\r\n                yearTo: workDate.yearTo\r\n            }\r\n        ]);\r\n        setCompanyName('');\r\n        setWorkDate({\r\n            monthFrom: '',\r\n            yearFrom: '',\r\n            monthTo: '',\r\n            yearTo: ''\r\n        });\r\n        setPosition('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteCompany = (id) => {\r\n        const newWorks = works.filter((work) => work.id !== id);\r\n        setWorks([...newWorks]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"work__container\">\r\n            <StepInfo current=\"4\"/>\r\n            <p className=\"work__title\">\r\n                Work experience\r\n            </p>\r\n            <section className={`work__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"companyname\" className=\"form__label\">Company name</label>\r\n                    <input onChange={(e) => setCompanyName(e.target.value)} className=\"form__input\" name=\"companyname\" value={companyName} />\r\n\r\n                    <label htmlFor=\"position\" className=\"form__label\">Position</label>\r\n                    <input onChange={(e) => setPosition(e.target.value)} className=\"form__input\" name=\"position\" value={position} />\r\n\r\n                    <label htmlFor=\"monthFrom\" className=\"form__label\">Start date</label>\r\n                    <section className=\"work__start\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthFrom\" value={workDate.monthFrom}>\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearFrom\" value={workDate.yearFrom}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    \r\n                    <label htmlFor=\"monthTo\" className=\"form__label\">End date</label>\r\n                    <section className=\"work__end\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthTo\" value={workDate.monthTo}>\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearTo\" value={workDate.yearTo}>\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewCompany}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n\r\n            {works.length > 0 && \r\n            \r\n            works.map((work, q) => {\r\n        \r\n            return  <article onClick={() => deleteCompany(work.id)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{`${work.monthFrom}/${work.yearFrom}`} - </span>\r\n                            <span className=\"years-to\">{`${work.monthTo}/${work.yearTo}`}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {work.position}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {work.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(4)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(4, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default WorkExperience;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Languages = ({ languages, setLanguages, changeStep }) => {\r\n\r\n    const [language, setLanguage] = useState('');\r\n    const [level, setLevel] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    \r\n    const saveNewLanguage = () => {\r\n        setLanguages(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                language: language,\r\n                level: level\r\n            }\r\n        ]);\r\n        setLanguage('');\r\n        setLevel('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteLanguage = (id) => {\r\n        const newLanguages = languages.filter((language) => language.id !== id);\r\n        setLanguages([...newLanguages]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"languages__container\">\r\n            <StepInfo current=\"5\"/>\r\n            <p className=\"work__title\">\r\n                Languages\r\n            </p>\r\n            <section className={`languages__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"language\" className=\"form__label\">Language</label>\r\n                    <input onChange={(e) => setLanguage(e.target.value)} className=\"form__input\" name=\"language\" value={language} />\r\n\r\n                    <label htmlFor=\"level\" className=\"form__label\">Level of knowledge</label>\r\n                    <input onChange={(e) => setLevel(e.target.value)} className=\"form__input\" name=\"level\" value={level} />\r\n\r\n                   \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewLanguage}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {languages.length > 0 && \r\n            \r\n            languages.map((language, q) => {\r\n        \r\n            return  <article onClick={() => deleteLanguage(language.id)} key={q} className=\"language__info\">\r\n                        <p className=\"language__name\">\r\n                            {language.language}\r\n                        </p>\r\n                        <p className=\"language__level\">\r\n                            {language.level}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(5)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(5, true)}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Languages;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst Skills = ({ skills, setSkills, changeStep, setIsCompleted }) => {\r\n\r\n    const [skill, setSkill] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const saveNewSkill = () => {\r\n        setSkills(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: Math.random(),\r\n                skill: skill\r\n            }\r\n        ]);\r\n        setSkill('');\r\n        setIsModalVisible(!isModalVisible);\r\n    }\r\n\r\n    const deleteSkill = (id) => {\r\n        const newSkills = skills.filter((skill) => skill.id !== id);\r\n        setSkills([...newSkills]);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"skills__container\">\r\n            <StepInfo current=\"6\" />\r\n            <p className=\"work__title\">\r\n                Additional skills\r\n            </p>\r\n            <section className={`skills__modal ${isModalVisible ? \"\" : \"hidden\"}`}>\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"skill\" className=\"form__label\">Skill</label>\r\n                    <input onChange={(e) => setSkill(e.target.value)} className=\"form__input\" name=\"skill\" value={skill} />\r\n            \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => setIsModalVisible(!isModalVisible)}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={saveNewSkill}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {skills.length > 0 && \r\n            \r\n            skills.map((skill, q) => {\r\n        \r\n            return  <article onClick={() => deleteSkill(skill.id)} key={q} className=\"skill__info\">\r\n                        <p className=\"skill__name\">\r\n                            {skill.skill}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => setIsModalVisible(!isModalVisible)} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(6)}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => {changeStep(6, true); setIsCompleted(true)}}> \r\n                    <Button text=\"Create CV\" />\r\n                </span>\r\n            </section>      \r\n        </main>\r\n        \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Skills;","import React from \"react\";\r\nimport { Page, Text, View, Image } from \"@react-pdf/renderer\";\r\n\r\nimport { styles } from \"../styles\";\r\n\r\nconst Template0 = ({ personal, schools, works, languages, skills }) => {\r\n    return (\r\n        <Page size=\"A4\" style={styles[0].page}>\r\n            <View style={styles[0].personalData}>\r\n                <View style={styles[0].userInfo}>\r\n                    <View style={styles[0].name}>\r\n                        <Text>{personal.name}</Text>\r\n                        <Text>{personal.surname}</Text>\r\n                    </View>\r\n                    <View style={styles[0].info}>\r\n                        <Text>{personal.email}</Text>\r\n                        <Text>{personal.phone}</Text>\r\n                        <Text>{personal.city}</Text>\r\n                    </View>\r\n                </View>\r\n                {personal.photo ? <Image style={styles[0].photo} src={personal.photo} /> : null }\r\n            </View>\r\n\r\n            <Text style={styles[0].header}>\r\n                {schools.length > 0 && \"Education\"}\r\n            </Text>\r\n            <View style={styles[0].education}>\r\n                {schools.map((school) => {\r\n                    return (\r\n                        <View style={styles[0].educationElement}>\r\n                            <View style={styles[0].educationYears}>\r\n                                <Text>\r\n                                    {school.from} - {school.to}\r\n                                </Text>\r\n                            </View>\r\n                            <View style={styles[0].educationSchools}>\r\n                                <Text style={styles[0].educationSchoolName}>\r\n                                    {school.name}\r\n                                </Text>\r\n                                <Text style={styles[0].educationSpec}>\r\n                                    {school.major}\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })}\r\n            </View>\r\n\r\n            <Text style={styles[0].header}>\r\n                {works.length > 0 && \"Work experience\"}\r\n            </Text>\r\n            <View style={styles[0].work}>\r\n                {works.map((work) => {\r\n                    return (\r\n                        <View style={styles[0].workElement}>\r\n                            <View style={styles[0].workYears}>\r\n                                <Text>\r\n                                    {work.monthFrom}/{work.yearFrom} -{\" \"}\r\n                                    {work.monthTo}/{work.yearTo}\r\n                                </Text>\r\n                            </View>\r\n                            <View style={styles[0].workInfo}>\r\n                                <Text style={styles[0].workPosition}>\r\n                                    {work.position}\r\n                                </Text>\r\n                                <Text style={styles[0].workCompanyName}>\r\n                                    {work.name}\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n                    );\r\n                })}\r\n            </View>\r\n\r\n            <Text style={styles[0].header}>\r\n                {languages.length > 0 && \"Languages\"}\r\n            </Text>\r\n            <View style={styles[0].languages}>\r\n                {languages.map((language) => {\r\n                    return (\r\n                        <View style={styles[0].languageElement}>\r\n                            <Text style={styles[0].languageName}>\r\n                                {language.language}\r\n                            </Text>\r\n                            <Text style={styles[0].languageLevel}>\r\n                                - {language.level}\r\n                            </Text>\r\n                        </View>\r\n                    );\r\n                })}\r\n            </View>\r\n\r\n            <Text style={styles[0].header}>\r\n                {skills.length > 0 && \"Additional skills\"}\r\n            </Text>\r\n            {skills.map((skill, q) => {\r\n                return <Text key={q}>{skill.skill}</Text>;\r\n            })}\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Template0;\r\n","import React from \"react\";\r\nimport { Page, Text, View, Image } from \"@react-pdf/renderer\";\r\n\r\nimport { styles } from \"../styles\";\r\n\r\nconst Template1 = ({ template, personal, schools, works, languages, skills }) => {\r\n    return (\r\n        <Page size=\"A4\" style={styles[1].page}>\r\n            <View\r\n                style={{\r\n                    ...styles[1].leftPanel,\r\n                    backgroundColor: template.color,\r\n                }}\r\n            >\r\n                {personal.photo ? <Image style={styles[1].photo} src={personal.photo} /> : null }\r\n                <View style={styles[1].personalData}>\r\n                    <View style={styles[1].name}>\r\n                        <Text>{personal.name}</Text>\r\n                        <Text>{personal.surname}</Text>\r\n                    </View>\r\n                    <View style={styles[1].info}>\r\n                        <Text>{personal.email}</Text>\r\n                        <Text>{personal.phone}</Text>\r\n                        <Text>{personal.city}</Text>\r\n                    </View>\r\n                </View>\r\n\r\n                <Text style={styles[1].header}>\r\n                    {languages.length > 0 && \"Languages\"}\r\n                </Text>\r\n                <View style={styles[1].languages}>\r\n                    {languages.map((language, q) => {\r\n                        return (\r\n                            <View key={q} style={styles[1].languageElement}>\r\n                                <Text style={styles[1].languageName}>\r\n                                    {language.language}\r\n                                </Text>\r\n                                <Text style={styles[1].languageLevel}>\r\n                                    - {language.level}\r\n                                </Text>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[1].header}>\r\n                    {skills.length > 0 && \"Additional skills\"}\r\n                </Text>\r\n                {skills.map((skill, q) => {\r\n                    return <Text key={q}>{skill.skill}</Text>;\r\n                })}\r\n            </View>\r\n\r\n            <View style={styles[1].rightPanel}>\r\n                <Text style={styles[1].header}>\r\n                    {schools.length > 0 && \"Education\"}\r\n                </Text>\r\n                <View style={styles[1].education}>\r\n                    {schools.map((school) => {\r\n                        return (\r\n                            <View style={styles[1].educationElement}>\r\n                                <View style={styles[1].educationYears}>\r\n                                    <Text>\r\n                                        {school.from} - {school.to}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles[1].educationSchools}>\r\n                                    <Text style={styles[1].educationSchoolName}>\r\n                                        {school.name}\r\n                                    </Text>\r\n                                    <Text style={styles[1].educationSpec}>\r\n                                        {school.major}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[1].header}>\r\n                    {works.length > 0 && \"Work experience\"}\r\n                </Text>\r\n                <View style={styles[1].work}>\r\n                    {works.map((work) => {\r\n                        return (\r\n                            <View style={styles[1].workElement}>\r\n                                <View style={styles[1].workYears}>\r\n                                    <Text>\r\n                                        {work.monthFrom}/{work.yearFrom} -{\" \"}\r\n                                        {work.monthTo}/{work.yearTo}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles[1].workInfo}>\r\n                                    <Text style={styles[1].workPosition}>\r\n                                        {work.position}\r\n                                    </Text>\r\n                                    <Text style={styles[1].workCompanyName}>\r\n                                        {work.name}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                        );\r\n                    })}\r\n                </View>\r\n            </View>\r\n        </Page>\r\n    );\r\n};\r\n\r\nexport default Template1;\r\n","import React from \"react\";\r\nimport { Document } from \"@react-pdf/renderer\";\r\n\r\nimport Template0 from \"./Template0\";\r\nimport Template1 from \"./Template1\";\r\n\r\nconst CvDocument = (props) => {\r\n    let choosenTemplate;\r\n    if (props.template.number === \"0\")\r\n        choosenTemplate = <Template0 {...props} />;\r\n    if (props.template.number === \"1\")\r\n        choosenTemplate = <Template1 {...props} />;\r\n    return <Document>{choosenTemplate}</Document>;\r\n};\r\n\r\nexport default CvDocument;\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nimport Button from '../Button/index';\r\nimport CvDocument from '../CvDocument/index';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\n\r\nconst Download = ({ template, personal, schools, works, languages, skills, changeStep }) => {\r\n  \r\n    return (\r\n      <main className=\"download__container\">\r\n        <p className=\"download__title\">Your CV is ready</p>\r\n\r\n        <Button>\r\n          <PDFDownloadLink\r\n            document={\r\n              <CvDocument\r\n                template={template}\r\n                personal={personal}\r\n                schools={schools}\r\n                works={works}\r\n                languages={languages}\r\n                skills={skills}\r\n              />\r\n            }\r\n            fileName={`${personal.name}'s_CV.pdf`}\r\n          >\r\n            {({ loading }) =>\r\n              loading ? \"Loading...\" : \"Download\"\r\n            }\r\n          </PDFDownloadLink>\r\n        </Button>\r\n        <section className=\"form__controls\">\r\n          <span onClick={() => changeStep(7)}>\r\n            <Button text=\"Back\" type=\"cancel\" />\r\n          </span>\r\n        </section>\r\n      </main>\r\n    );\r\n}\r\n \r\nexport default Download;","import { useLayoutEffect, useState } from 'react';\r\n\r\nconst useWindowSize = () => {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, []);\r\n  return size;\r\n}\r\n\r\nexport default useWindowSize;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport Templates from '../Templates/index';\r\nimport Button from '../Button/index';\r\n\r\nimport PersonalData from '../PersonalData/index';\r\nimport Education from '../Education/index';\r\nimport WorkExperience from '../WorkExperience/index';\r\nimport Languages from '../Languages/index';\r\nimport Skills from '../Skills/index';\r\nimport Download from '../Download/index';\r\n\r\nimport { BlobProvider } from '@react-pdf/renderer';\r\nimport CvDocument from '../CvDocument';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nimport useWindowSize from '../../utils/hooks/useWindowSize';\r\n\r\n\r\nconst Home = ({ changeStep, previewPosition, isPreviewOpen }) => {\r\n\r\n    const [template, setTemplate] = useState({ color: \"#e6e6e6\", number: '0' });\r\n    const [personal, setPersonal] = useState({\r\n        name: \"\",\r\n        surname: \"\",\r\n        city: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        photo: \"\",\r\n    });\r\n    const [schools, setSchools] = useState([]);\r\n    const [works, setWorks] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [skills, setSkills] = useState([]);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n    let [width] = useWindowSize();\r\n    width = width < 850 ? width : width / 2.5;\r\n\r\n    return (\r\n        <>\r\n            <main className=\"home__container\">\r\n                <p className=\"hero__text\">\r\n                    Create your own CV with our templates!\r\n                </p>\r\n                <span onClick={() => changeStep(0, true)}>\r\n                    <Button text=\"Start now\" />\r\n                </span>\r\n                <p className=\"invite__text\">No programms needed.</p>\r\n                <p className=\"invite__text\">Easy in use.</p>\r\n                <p className=\"invite__text\">PDF format.</p>\r\n            </main>\r\n\r\n            <BlobProvider\r\n                document={\r\n                    <CvDocument\r\n                        template={template}\r\n                        personal={personal}\r\n                        schools={schools}\r\n                        works={works}\r\n                        languages={languages}\r\n                        skills={skills}\r\n                    />\r\n                }\r\n            >\r\n                {({ url }) => {\r\n                    return (\r\n                        <div\r\n                            className={`preview__container ${\r\n                                isPreviewOpen ? \"visible\" : \"\"\r\n                            }`}\r\n                            style={{\r\n                                transform: previewPosition,\r\n                            }}\r\n                        >\r\n                            <Document className=\"preview__document\" file={url}>\r\n                                <Page\r\n                                    width={width}\r\n                                    scale={0.9}\r\n                                    className=\"preview__page\"\r\n                                    pageNumber={1}\r\n                                />\r\n                            </Document>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </BlobProvider>\r\n\r\n            <Templates\r\n                template={template}\r\n                setTemplate={setTemplate}\r\n                changeStep={changeStep}\r\n            />\r\n            <PersonalData\r\n                personal={personal}\r\n                setPersonal={setPersonal}\r\n                changeStep={changeStep}\r\n            />\r\n            <Education\r\n                schools={schools}\r\n                setSchools={setSchools}\r\n                changeStep={changeStep}\r\n            />\r\n            <WorkExperience\r\n                works={works}\r\n                setWorks={setWorks}\r\n                changeStep={changeStep}\r\n            />\r\n            <Languages\r\n                languages={languages}\r\n                setLanguages={setLanguages}\r\n                changeStep={changeStep}\r\n            />\r\n            <Skills\r\n                skills={skills}\r\n                setSkills={setSkills}\r\n                setIsCompleted={setIsCompleted}\r\n                changeStep={changeStep}\r\n            />\r\n\r\n            {isCompleted && (\r\n                <Download\r\n                    template={template}\r\n                    personal={personal}\r\n                    schools={schools}\r\n                    works={works}\r\n                    languages={languages}\r\n                    skills={skills}\r\n                    changeStep={changeStep}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Logo = () => {\r\n    return ( \r\n        <p className=\"logo\">\r\n            cv-maker\r\n        </p>\r\n    );\r\n}\r\n \r\nexport default Logo;","import React, { useRef, useState } from 'react';\nimport './App.scss';\nimport Home from './components/Home/index';\nimport Logo from './components/Logo/index';\nimport Button from './components/Button/index';\n\nconst App = () => {\n\n  const appRef = useRef(null);\n  const [previewPosition, setPreviewPosition] = useState(`translateX(0)`);\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\n\n\n  const changeStep = (currentStep, isForward = false) => {\n    window.scrollTo(0, 0);\n    const property = isForward ? `translateX(-${currentStep + 1}00vw)` : `translateX(-${currentStep - 1}00vw)`;\n    appRef.current.style.transform = property;\n    setPreviewPosition(isForward ? `translateX(${currentStep + 1}00vw)` : `translateX(${currentStep - 1}00vw)`);\n  }\n  \n  return (\n      <>\n          <Button\n              onClick={() => setIsPreviewOpen(!isPreviewOpen)}\n              styles={`button__preview`}\n              text={isPreviewOpen ? \"CLOSE\" : \"PREVIEW\"}\n          />\n\n          <Logo />\n\n          <div ref={appRef} className=\"app__container\">\n              <Home\n                  changeStep={changeStep}\n                  previewPosition={previewPosition}\n                  isPreviewOpen={isPreviewOpen}\n              />\n          </div>\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}