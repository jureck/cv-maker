{"version":3,"sources":["assets/templates sync /^/template_.*/.PNG$","assets/templates/template_0.PNG","assets/templates/template_1.PNG","components/StepInfo/index.js","components/Button/index.js","components/PersonalData/index.js","utils/getYearsFromRange.js","components/Education/index.js","components/WorkExperience/index.js","components/Languages/index.js","components/Skills/index.js","components/CvDocument/styles.js","components/CvDocument/index.js","components/Download/index.js","components/Templates/index.js","components/Home/index.js","components/Logo/index.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StepDots","current","a","i","parseInt","push","key","className","Button","props","type","text","children","PersonalData","personal","setPersonal","htmlFor","onChange","target","file","files","photoName","name","reader","FileReader","document","querySelector","innerHTML","slice","length","onload","photo","result","readAsDataURL","setPhoto","accept","value","surname","city","max","phone","email","onClick","changeStep","nameError","surnameError","phoneError","classList","add","remove","getYearsFromRange","firstYear","lastYear","years","Education","schools","setSchools","useState","schoolName","setSchoolName","major","setMajor","from","to","schoolYears","setSchoolYears","counter","setCounter","switchModal","move","Date","getFullYear","onSubmit","preventDefault","year","q","oldArr","saveNewSchool","school","newSchools","filter","deleteSchool","WorkExperience","works","setWorks","companyName","setCompanyName","position","setPosition","monthFrom","yearFrom","monthTo","yearTo","workDate","setWorkDate","months","month","saveNewCompany","work","newWorks","deleteCompany","Languages","languages","setLanguages","language","setLanguage","level","setLevel","saveNewLanguage","newLanguages","deleteLanguage","Skills","skills","setSkills","setIsCompleted","skill","setSkill","saveNewSkill","newSkills","deleteSkill","styles","StyleSheet","create","0","page","flexDirection","backgroundColor","padding","fontFamily","fontSize","personalData","marginBottom","justifyContent","fontWeight","educationElement","marginTop","educationSchools","marginLeft","educationSpec","workElement","workInfo","workPosition","languageElement","languageName","languageLevel","header","height","1","leftPanel","width","rightPanel","education","Font","register","family","fonts","src","CvDocument","template","number","size","style","userInfo","info","educationYears","educationSchoolName","workYears","workCompanyName","color","Download","fileName","blob","url","loading","error","Templates","templatesList","setTemplate","isCompleted","selectColor","colorCode","colorsItems","tem","Fragment","require","alt","currentStep","direction","app","property","transform","Home","Logo","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3930a3a0.chunk.js","sourcesContent":["var map = {\n\t\"./template_0.PNG\": 436,\n\t\"./template_1.PNG\": 437\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 258;","module.exports = __webpack_public_path__ + \"static/media/template_0.55490b1f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/template_1.6d06ff1a.PNG\";","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst StepDots = ({current}) => {\r\n\r\n    let a = [];\r\n    for(let i=0; i<6; i++) {\r\n        if(i<parseInt(current)) {\r\n            a.push(<span key={i} className=\"dot filled\"></span>);\r\n        }\r\n        else {\r\n            a.push(<span key={i} className=\"dot\" ></span>)   ;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"dots\">\r\n            {a}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default StepDots;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Button = (props) => {\r\n    return (  \r\n        <button \r\n            className={`button ${props.type === \"cancel\" ? \"cancel\" : \"\" }`} \r\n        >\r\n            {props.text}\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n \r\nexport default Button;","import React from 'react';\r\nimport './index.scss';\r\nimport { changeStep } from '../Home/index';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\n\r\nconst PersonalData = ({ personal, setPersonal }) => {\r\n\r\n       \r\n\r\n    const setPhoto = (e, setPersonal, personal) => {\r\n        if(e.target) {\r\n            const file = e.target.files[0];\r\n            const photoName = e.target.files[0].name;\r\n            const reader = new FileReader();\r\n            document.querySelector('.photo__name').innerHTML = `Uploaded (${photoName.slice(0, 20)}${photoName.length>20 ? \"...\" : \"\"})`;\r\n            reader.onload = (e) => {\r\n                setPersonal({...personal, photo: e.target.result});\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n\r\n    const checkValidity = () => {\r\n\r\n        const name = document.querySelector('input[name=\"name\"]');\r\n        const surname = document.querySelector('input[name=\"surname\"]');\r\n        const phone = document.querySelector('input[name=\"phone\"]');\r\n\r\n        const nameError =  document.querySelector('#nameError');\r\n        const surnameError =  document.querySelector('#surnameError');\r\n        const phoneError =  document.querySelector('#phoneError');\r\n        \r\n        nameError.classList.add('hidden');\r\n        surnameError.classList.add('hidden');\r\n        phoneError.classList.add('hidden');\r\n\r\n        name.classList.remove('error');\r\n        surname.classList.remove('error');\r\n        phone.classList.remove('error');\r\n\r\n        if(!name.value) {\r\n            name.classList.add('error');\r\n            nameError.classList.remove('hidden');\r\n        }\r\n        if(!surname.value) {\r\n            surname.classList.add('error');\r\n            surnameError.classList.remove('hidden');\r\n        }\r\n        if(!phone.value) {\r\n            phone.classList.add('error');\r\n            phoneError.classList.remove('hidden');\r\n        }\r\n        if(name.value && surname.value && phone.value) {\r\n            changeStep(2, 'next');\r\n        }\r\n        \r\n    }\r\n    \r\n    return ( \r\n        <>\r\n            <main className=\"personal__container\">\r\n                <StepInfo current=\"2\" />\r\n                <p className=\"personal__title\">\r\n                    Personal data\r\n                </p>\r\n                <form className=\"form\">\r\n                    <p className=\"form__label\">Your photo</p>\r\n                    <label htmlFor=\"photo\" className=\"photo__input\">\r\n                        Click here to upload\r\n                    </label>\r\n                    <p className=\"photo__name\">\r\n                    </p>\r\n                    <input onChange={(e) => setPhoto(e, setPersonal, personal)} className=\"form__input hidden\" type=\"file\" id=\"photo\" accept=\"image/png, image/jpeg\" />\r\n                    \r\n                    <label htmlFor=\"name\" className=\"form__label\">Name</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className=\"form__input\" name=\"name\" value={personal.name} />\r\n                    <p id=\"nameError\" className=\"form__input-error hidden\">This field is required</p>\r\n\r\n                    <label htmlFor=\"surname\" className=\"form__label\">Surname</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className=\"form__input\" name=\"surname\" value={personal.surname}/>\r\n                    <p id=\"surnameError\" className=\"form__input-error hidden\">This field is required</p>\r\n\r\n                    <label htmlFor=\"city\" className=\"form__label\">City</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} className=\"form__input\" name=\"city\" value={personal.city}/>\r\n\r\n                    <label htmlFor=\"phone\" className=\"form__label\">Phone number</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"number\" className=\"form__input\" name=\"phone\" max=\"999999999\" value={personal.phone}/>\r\n                    <p id=\"phoneError\" className=\"form__input-error hidden\">This field is required</p>\r\n\r\n                    <label htmlFor=\"email\" className=\"form__label\">Email</label>\r\n                    <input onChange={(e) => setPersonal({...personal, [e.target.name]: e.target.value})} type=\"email\" className=\"form__input\" name=\"email\" value={personal.email}/>\r\n                </form>\r\n\r\n                <section className=\"form__controls\">\r\n                    <span onClick={() => changeStep(2, 'back')}>\r\n                        <Button text=\"Back\" type=\"cancel\" />\r\n                    </span>\r\n        \r\n                    <span onClick={checkValidity}> \r\n                        <Button text=\"Next step\" />\r\n                    </span>\r\n                </section>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default PersonalData;","const getYearsFromRange = (firstYear, lastYear) => {\r\n    const years =  [' '];\r\n    for(let i = firstYear; i <= lastYear; i++) {\r\n        years.push(i);\r\n    }\r\n    return years;\r\n}\r\nexport default getYearsFromRange;\r\n","import React, {useState} from 'react';\r\nimport './index.scss';\r\n\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\nimport { changeStep } from '../Home/index';\r\n\r\nconst Education = ({ schools, setSchools}) => {\r\n\r\n    const [schoolName, setSchoolName] = useState('');\r\n    const [major, setMajor] = useState('');\r\n    const [schoolYears, setSchoolYears] = useState({\r\n        from: '',\r\n        to: ''\r\n    });\r\n    const [counter, setCounter] = useState(0);\r\n\r\n\r\n    const saveNewSchool = (counter, setCounter, schoolName, major, schoolYears, setSchools, setSchoolName, setSchoolYears, setMajor) => {\r\n        setSchools(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: counter,\r\n                name: schoolName,\r\n                major: major,\r\n                from: schoolYears.from,\r\n                to: schoolYears.to\r\n            }\r\n        ]);\r\n        setCounter(counter + 1);\r\n        setSchoolName('');\r\n        setSchoolYears('');\r\n        setMajor('');\r\n        switchModal('close');\r\n    }\r\n\r\n    const deleteSchool = (id, setCounter, setSchools) => {\r\n        const temp = [...schools];\r\n        const newSchools = temp.filter((school) => school.id !== id);\r\n        setSchools([...newSchools]);\r\n        setCounter(0);\r\n    }\r\n\r\n    const switchModal = (move) => {\r\n        if(move === \"open\") {\r\n            document.querySelector('.education__modal').classList.remove('hidden');\r\n        }\r\n        else {\r\n            document.querySelector('.education__modal').classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    const years = getYearsFromRange(1950, new Date().getFullYear());\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"education__container\">\r\n            <section className=\"education__modal hidden\">\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"schoolname\" className=\"form__label\">School name</label>\r\n                    <input onChange={(e) => setSchoolName(e.target.value)} className=\"form__input\" name=\"schoolname\" value={schoolName} />\r\n\r\n                    <label htmlFor=\"major\" className=\"form__label\">Major</label>\r\n                    <input onChange={(e) => setMajor(e.target.value)} className=\"form__input\" name=\"major\" value={major} />\r\n\r\n                    <label htmlFor=\"from\" className=\"form__label\">Education years</label>\r\n                    <section className=\"school__years\">\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"from\" >\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setSchoolYears({...schoolYears, [e.target.name]: e.target.value})} className=\"form__input\" name=\"to\" >\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => switchModal('close')}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={() => saveNewSchool(counter, setCounter, schoolName, major, schoolYears, setSchools, setSchoolName, setSchoolYears, setMajor)}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n            <StepInfo current=\"3\"/>\r\n            <p className=\"education__title\">\r\n                Education\r\n            </p>\r\n            {schools.length > 0 && \r\n            \r\n            schools.map((school, q) => {\r\n        \r\n            return  <article onClick={() => deleteSchool(q, setCounter, setSchools)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{school.from} - </span>\r\n                            <span className=\"years-to\">{school.to}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {school.major}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {school.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => switchModal('open')} className=\"plus__button\">\r\n            </span>\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(3, 'back')}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(3, 'next')}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Education;","import React, { useState } from 'react';\r\nimport './index.scss'\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport getYearsFromRange from '../../utils/getYearsFromRange';\r\nimport Button from '../Button/index';\r\nimport { changeStep } from '.././Home/index';\r\n\r\nconst WorkExperience = ({ works, setWorks }) => {\r\n\r\n    \r\n    const [companyName, setCompanyName] = useState('');\r\n    const [position, setPosition] = useState('');\r\n    const [workDate, setWorkDate] = useState({\r\n        monthFrom: '',\r\n        yearFrom: '',\r\n        monthTo: '',\r\n        yearTo: ''\r\n    });\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const years = getYearsFromRange(1960, new Date().getFullYear());\r\n    const months = [' ', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n\r\n\r\n    const saveNewCompany = (counter, setCounter, companyName, position, workDate, setWorks, setCompanyName, setWorkDate, setPosition) => {\r\n        setWorks(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: counter,\r\n                name: companyName,\r\n                position: position,\r\n                monthFrom: workDate.monthFrom,\r\n                yearFrom: workDate.yearFrom,\r\n                monthTo: workDate.monthTo,\r\n                yearTo: workDate.yearTo\r\n            }\r\n        ]);\r\n        setCounter(counter + 1);\r\n        setCompanyName('');\r\n        setWorkDate('');\r\n        setPosition('');\r\n        switchModal('close');\r\n    }\r\n\r\n    const deleteCompany = (id, setCounter, setWorks) => {\r\n        const temp = [...works];\r\n        const newWorks = temp.filter((work) => work.id !== id);\r\n        setWorks([...newWorks]);\r\n        setCounter(0);\r\n    }\r\n\r\n    const switchModal = (move) => {\r\n        if(move === \"open\") {\r\n            document.querySelector('.work__modal').classList.remove('hidden');\r\n        }\r\n        else {\r\n            document.querySelector('.work__modal').classList.add('hidden');\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"work__container\">\r\n            <StepInfo current=\"4\"/>\r\n            <p className=\"work__title\">\r\n                Work experience\r\n            </p>\r\n            <section className=\"work__modal hidden\">\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"companyname\" className=\"form__label\">Company name</label>\r\n                    <input onChange={(e) => setCompanyName(e.target.value)} className=\"form__input\" name=\"companyname\" value={companyName} />\r\n\r\n                    <label htmlFor=\"position\" className=\"form__label\">Position</label>\r\n                    <input onChange={(e) => setPosition(e.target.value)} className=\"form__input\" name=\"position\" value={position} />\r\n\r\n                    <label htmlFor=\"monthFrom\" className=\"form__label\">Start date</label>\r\n                    <section className=\"work__start\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthFrom\" >\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearFrom\" >\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    \r\n                    <label htmlFor=\"monthTo\" className=\"form__label\">End date</label>\r\n                    <section className=\"work__end\">\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"monthTo\" >\r\n                            {months.map((month, q) => {\r\n                                return <option key={q} value={month}>{month}</option>\r\n                            })}\r\n                        </select>\r\n                        <select onChange={(e) => setWorkDate({...workDate, [e.target.name]: e.target.value})} className=\"form__input\" name=\"yearTo\" >\r\n                            {years.map((year, q) => {\r\n                                return <option key={q} value={year}>{year}</option>\r\n                            })}\r\n                        </select>\r\n                    </section>\r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => switchModal('close')}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={() => saveNewCompany(counter, setCounter, companyName, position, workDate, setWorks, setCompanyName, setWorkDate, setPosition)}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n                \r\n            </section>\r\n\r\n            {works.length > 0 && \r\n            \r\n            works.map((work, q) => {\r\n        \r\n            return  <article onClick={() => deleteCompany(q, setCounter, setWorks)} key={q} className=\"school\">\r\n                        <p className=\"school__years-info\">\r\n                            <span className=\"years-from\">{`${work.monthFrom}/${work.yearFrom}`} - </span>\r\n                            <span className=\"years-to\">{`${work.monthTo}/${work.yearTo}`}</span>\r\n                        </p>\r\n                        <p className=\"school__major\">\r\n                            {work.position}\r\n                        </p>\r\n                        <p className=\"school__name\">\r\n                            {work.name}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n            <span onClick={() => switchModal('open')} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(4, 'back')}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(4, 'next')}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default WorkExperience;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\nimport { changeStep } from '../Home/index';\r\n\r\nconst Languages = ({ languages, setLanguages }) => {\r\n\r\n    \r\n    const [language, setLanguage] = useState('');\r\n    const [level, setLevel] = useState('');\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const saveNewLanguage = (counter, setCounter, setLanguages, setLanguage, setLevel) => {\r\n        setLanguages(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: counter,\r\n                language: language,\r\n                level: level\r\n            }\r\n        ]);\r\n        setCounter(counter + 1);\r\n        setLanguage('');\r\n        setLevel('');\r\n        switchModal('close');\r\n    }\r\n\r\n    const switchModal = (move) => {\r\n        if(move === \"open\") {\r\n            document.querySelector('.languages__modal').classList.remove('hidden');\r\n        }\r\n        else {\r\n            document.querySelector('.languages__modal').classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    const deleteLanguage = (id, setCounter, setLanguages) => {\r\n        const temp = [...languages];\r\n        const newLanguages = temp.filter((language) => language.id !== id);\r\n        setLanguages([...newLanguages]);\r\n        setCounter(0);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"languages__container\">\r\n            <StepInfo current=\"5\"/>\r\n            <p className=\"work__title\">\r\n                Languages\r\n            </p>\r\n            <section className=\"languages__modal hidden\">\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"language\" className=\"form__label\">Language</label>\r\n                    <input onChange={(e) => setLanguage(e.target.value)} className=\"form__input\" name=\"language\" value={language} />\r\n\r\n                    <label htmlFor=\"level\" className=\"form__label\">Level of knowledge</label>\r\n                    <input onChange={(e) => setLevel(e.target.value)} className=\"form__input\" name=\"level\" value={level} />\r\n\r\n                   \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => switchModal('close')}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={() => saveNewLanguage(counter, setCounter, setLanguages, setLanguage, setLevel)}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {languages.length > 0 && \r\n            \r\n            languages.map((language, q) => {\r\n        \r\n            return  <article onClick={() => deleteLanguage(q, setCounter, setLanguages)} key={q} className=\"language__info\">\r\n                        <p className=\"language__name\">\r\n                            {language.language}\r\n                        </p>\r\n                        <p className=\"language__level\">\r\n                            {language.level}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => switchModal('open')} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(5, 'back')}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => changeStep(5, 'next')}> \r\n                    <Button text=\"Next step\" />\r\n                </span>\r\n            </section>\r\n        </main>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Languages;","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nimport StepInfo from '../StepInfo/index';\r\nimport Button from '../Button/index';\r\nimport { changeStep } from '../Home/index';\r\n\r\nconst Skills = ({ skills, setSkills, setIsCompleted }) => {\r\n\r\n    const [skill, setSkill] = useState('');\r\n    const [counter, setCounter] = useState(0);\r\n\r\n    const saveNewSkill = (counter, setCounter, setSkills, setSkill) => {\r\n        setSkills(oldArr => [\r\n            ...oldArr,\r\n            {\r\n                id: counter,\r\n                skill: skill\r\n            }\r\n        ]);\r\n        setCounter(counter + 1);\r\n        setSkill('');\r\n        switchModal('close');\r\n    }\r\n\r\n    const switchModal = (move) => {\r\n        if(move === \"open\") {\r\n            document.querySelector('.skills__modal').classList.remove('hidden');\r\n        }\r\n        else {\r\n            document.querySelector('.skills__modal').classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    const deleteSkill = (id, setCounter, setSkills) => {\r\n        const temp = [...skills];\r\n        const newSkills = temp.filter((skill) => skill.id !== id);\r\n        setSkills([...newSkills]);\r\n        setCounter(0);\r\n    }\r\n\r\n    return ( \r\n        <>\r\n\r\n        <main className=\"skills__container\">\r\n            <StepInfo current=\"6\" />\r\n            <p className=\"work__title\">\r\n                Additional skills\r\n            </p>\r\n            <section className=\"skills__modal hidden\">\r\n                <form onSubmit={(e) => e.preventDefault()} className=\"form\">\r\n                    \r\n                    <label htmlFor=\"skill\" className=\"form__label\">Skill</label>\r\n                    <input onChange={(e) => setSkill(e.target.value)} className=\"form__input\" name=\"skill\" value={skill} />\r\n            \r\n                    <section className=\"form__controls\">\r\n                        <span onClick={() => switchModal('close')}>\r\n                            <Button text=\"Cancel\" type=\"cancel\" />\r\n                        </span>\r\n            \r\n                        <span onClick={() => saveNewSkill(counter, setCounter, setSkills, setSkill)}> \r\n                            <Button text=\"Done\" />\r\n                        </span>\r\n                    </section>\r\n                </form>\r\n            </section>\r\n\r\n            {skills.length > 0 && \r\n            \r\n            skills.map((skill, q) => {\r\n        \r\n            return  <article onClick={() => deleteSkill(q, setCounter, setSkills)} key={q} className=\"skill__info\">\r\n                        <p className=\"skill__name\">\r\n                            {skill.skill}\r\n                        </p>\r\n                    </article>\r\n            })\r\n\r\n            }\r\n\r\n            <span onClick={() => switchModal('open')} className=\"plus__button\">\r\n            </span>\r\n\r\n            <section className=\"form__controls\">\r\n                <span onClick={() => changeStep(6, 'back')}>\r\n                    <Button text=\"Back\" type=\"cancel\" />\r\n                </span>\r\n    \r\n                <span onClick={() => {changeStep(6, 'next'); setIsCompleted(true)}}> \r\n                    <Button text=\"Create CV\" />\r\n                </span>\r\n            </section>      \r\n        </main>\r\n        \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Skills;","import { Font, StyleSheet } from '@react-pdf/renderer';\r\n\r\n\r\nexport const styles = StyleSheet.create({\r\n    0: {\r\n      page: {\r\n          flexDirection: 'column',\r\n          backgroundColor: '#FFFFFF',\r\n          padding: 30,\r\n          fontFamily: 'Open Sans',\r\n          fontSize: 15\r\n        },\r\n        personalData: {\r\n          marginBottom: 50,\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between'\r\n        },\r\n        name: {\r\n          fontWeight: 'bold',\r\n          marginBottom: 20,\r\n          fontSize: 22\r\n        },\r\n        educationElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        educationSchools: {\r\n          marginLeft: 10\r\n        },\r\n        educationSpec: {\r\n          fontWeight: 'bold'\r\n        },\r\n        workElement: {\r\n          flexDirection: 'row',\r\n          marginTop: 5\r\n        },\r\n        workInfo: {\r\n          marginLeft: 10\r\n        },\r\n        workPosition: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageElement: {\r\n          flexDirection: 'row'\r\n        },\r\n        languageName: {\r\n          fontWeight: 'bold'\r\n        },\r\n        languageLevel: {\r\n          marginLeft: 5\r\n        },\r\n        header: {\r\n          marginTop: 20,\r\n          marginBottom: 10,\r\n          fontWeight: 'bold',\r\n          fontSize: 20\r\n        },\r\n        photo: {\r\n          height: 150\r\n        }\r\n    },\r\n    1: {\r\n      leftPanel: {\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        width: '35%',\r\n        padding: 20\r\n      },\r\n      rightPanel: {\r\n        padding: 30,\r\n        marginTop: 150\r\n      },\r\n      page: {\r\n        flexDirection: 'row',\r\n        backgroundColor: '#FFFFFF',\r\n        fontFamily: 'Open Sans',\r\n        fontSize: 15\r\n      },\r\n      personalData: {\r\n        marginBottom: 30,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n      },\r\n      name: {\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n        fontSize: 22\r\n      },\r\n      education: {\r\n        marginBottom: 60\r\n      },\r\n      educationElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      educationSchools: {\r\n        marginLeft: 10\r\n      },\r\n      educationSpec: {\r\n        fontWeight: 'bold'\r\n      },\r\n      workElement: {\r\n        flexDirection: 'row',\r\n        marginTop: 5\r\n      },\r\n      workInfo: {\r\n        marginLeft: 10\r\n      },\r\n      workPosition: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageElement: {\r\n        flexDirection: 'row'\r\n      },\r\n      languageName: {\r\n        fontWeight: 'bold'\r\n      },\r\n      languageLevel: {\r\n        marginLeft: 5\r\n      },\r\n      header: {\r\n        marginTop: 20,\r\n        marginBottom: 10,\r\n        fontWeight: 'bold',\r\n        fontSize: 20\r\n      },\r\n      photo: {\r\n        width: 170,\r\n        height: 'auto',\r\n        marginBottom: 10\r\n      }\r\n    }\r\n  });\r\n\r\n  Font.register({\r\n    family: 'Open Sans',\r\n    fonts: [\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-regular.ttf' },\r\n    { src: 'https://cdn.jsdelivr.net/npm/open-sans-all@0.1.3/fonts/open-sans-600.ttf', fontWeight: 600 }\r\n    ]\r\n    });","import React from 'react';\r\nimport { Document, Page, Text, View, Image } from '@react-pdf/renderer';\r\n\r\nimport { styles } from './styles';\r\n\r\nconst CvDocument = ({ template, personal, schools, works, languages, skills }) => {\r\n   \r\n    if(template.number === \"0\") {\r\n       \r\n        return (\r\n            <Document>\r\n                <Page size=\"A4\" style={styles[template.number].page}>\r\n\r\n                <View style={styles[template.number].personalData}>\r\n                    <View style={styles[template.number].userInfo}>\r\n                    <View style={styles[template.number].name}>\r\n                        <Text>{personal.name}</Text>\r\n                        <Text>{personal.surname}</Text>\r\n                    </View>\r\n                    <View style={styles[template.number].info}>\r\n                        <Text>{personal.email}</Text>\r\n                        <Text>{personal.phone}</Text>\r\n                        <Text>{personal.city}</Text>\r\n                    </View>\r\n                    </View>\r\n                    <Image style={styles[template.number].photo} src={personal.photo}/>\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{schools.length > 0 && 'Education'}</Text>\r\n                <View style={styles[template.number].education}>\r\n                    {schools.map((school) => {\r\n                        return  <View style={styles[template.number].educationElement}>\r\n                                    <View style={styles[template.number].educationYears}>\r\n                                        <Text>\r\n                                            {school.from} - {school.to}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].educationSchools}>\r\n                                        <Text style={styles[template.number].educationSpec}>\r\n                                            {school.major}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].educationSchoolName}>\r\n                                            {school.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{works.length > 0 && 'Work experience'}</Text>\r\n                <View style={styles[template.number].work}>\r\n                    {works.map((work) => {\r\n                        return  <View style={styles[template.number].workElement}>\r\n                                    <View style={styles[template.number].workYears}>\r\n                                        <Text>\r\n                                            {work.monthFrom}/{work.yearFrom} - {work.monthTo}/{work.yearTo}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].workInfo}>\r\n                                        <Text style={styles[template.number].workPosition}>\r\n                                            {work.position}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].workCompanyName}>\r\n                                            {work.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{languages.length > 0 && 'Languages'}</Text>\r\n                <View style={styles[template.number].languages}>\r\n                    {languages.map((language) => {\r\n                        return  <View style={styles[template.number].languageElement}>\r\n                                    <Text style={styles[template.number].languageName}>\r\n                                        {language.language}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].languageLevel}>\r\n                                        {language.level}\r\n                                    </Text>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{skills.length > 0 && 'Additional skills'}</Text>\r\n                {skills.map((skill, q) => {\r\n                    return <Text key={q}>{skill.skill}</Text>\r\n                })}\r\n                </Page>\r\n            </Document>\r\n        );\r\n    } else if(template.number === \"1\") {\r\n        return (\r\n            <Document>\r\n            <Page size=\"A4\" style={styles[template.number].page}>\r\n            <View style={{...styles[template.number].leftPanel, backgroundColor: template.color}}>\r\n            <Image style={styles[template.number].photo} src={personal.photo}/>\r\n            <View style={styles[template.number].personalData}>\r\n                <View style={styles[template.number].name}>\r\n                <Text>{personal.name}</Text>\r\n                <Text>{personal.surname}</Text>\r\n                </View>\r\n                <View style={styles[template.number].info}>\r\n                <Text>{personal.email}</Text>\r\n                <Text>{personal.phone}</Text>\r\n                <Text>{personal.city}</Text>\r\n                </View>\r\n            </View>\r\n\r\n                <Text style={styles[template.number].header}>{languages.length > 0 && 'Languages'}</Text>\r\n                <View style={styles[template.number].languages}>\r\n                    {languages.map((language, q) => {\r\n                        return  <View key={q} style={styles[template.number].languageElement}>\r\n                                    <Text style={styles[template.number].languageName}>\r\n                                        {language.language}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].languageLevel}>\r\n                                        {language.level}\r\n                                    </Text>\r\n                                </View>\r\n                    })}\r\n                </View>\r\n\r\n                <Text style={styles[template.number].header}>{skills.length > 0 && 'Additional skills'}</Text>\r\n                {skills.map((skill, q) => {\r\n                    return <Text key={q}>{skill.skill}</Text>\r\n                })}\r\n\r\n            </View>\r\n\r\n            <View style={styles[template.number].rightPanel}>\r\n            <Text style={styles[template.number].header}>{schools.length > 0 && 'Education'}</Text>\r\n            <View style={styles[template.number].education}>\r\n                {schools.map((school) => {\r\n                    return  <View style={styles[template.number].educationElement}>\r\n                                <View style={styles[template.number].educationYears}>\r\n                                    <Text>\r\n                                        {school.from} - {school.to}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={styles[template.number].educationSchools}>\r\n                                    <Text style={styles[template.number].educationSpec}>\r\n                                        {school.major}\r\n                                    </Text>\r\n                                    <Text style={styles[template.number].educationSchoolName}>\r\n                                        {school.name}\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                })}\r\n            </View>\r\n\r\n            <Text style={styles[template.number].header}>{works.length > 0 && 'Work experience'}</Text>\r\n            <View style={styles[template.number].work}>\r\n                    {works.map((work) => {\r\n                        return  <View style={styles[template.number].workElement}>\r\n                                    <View style={styles[template.number].workYears}>\r\n                                        <Text>\r\n                                            {work.monthFrom}/{work.yearFrom} - {work.monthTo}/{work.yearTo}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={styles[template.number].workInfo}>\r\n                                        <Text style={styles[template.number].workPosition}>\r\n                                            {work.position}\r\n                                        </Text>\r\n                                        <Text style={styles[template.number].workCompanyName}>\r\n                                            {work.name}\r\n                                        </Text>\r\n                                    </View>\r\n                                </View>\r\n                    })}\r\n            </View>\r\n\r\n            </View>\r\n        \r\n            </Page>\r\n            </Document>\r\n        );\r\n    } else return null;\r\n\r\n}\r\n \r\nexport default CvDocument;","import React from 'react';\r\nimport './index.scss';\r\n\r\nimport Button from '../Button/index';\r\nimport CvDocument from '../CvDocument/index';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport { changeStep } from '../Home/index';\r\n\r\nconst Download = ({ template, personal, schools, works, languages, skills }) => {\r\n  \r\n    return (\r\n      <main className=\"download__container\">\r\n        \r\n        <p className=\"download__title\">\r\n          Your CV is ready\r\n        </p>\r\n        \r\n        <Button>\r\n          <PDFDownloadLink \r\n              document={  <CvDocument template={template}\r\n                                      personal={personal}\r\n                                      schools={schools}\r\n                                      works={works}\r\n                                      languages={languages}\r\n                                      skills={skills}\r\n                          />} \r\n              fileName=\"MyCV.pdf\"\r\n          >\r\n              {({ blob, url, loading, error }) => (loading ? 'Loading...' : 'Download')}\r\n          </PDFDownloadLink>\r\n        </Button>\r\n        <section className=\"form__controls\">\r\n          <span onClick={() => changeStep(7, 'back')}>\r\n              <Button text=\"Back\" type=\"cancel\" />\r\n          </span>\r\n\r\n        </section>    \r\n      </main>\r\n      \r\n    );\r\n}\r\n \r\nexport default Download;","import React, { useState } from 'react';\r\nimport './index.scss';\r\nimport StepInfo from '../StepInfo/index';\r\nimport PersonalData from '../PersonalData/index';\r\nimport Education from '../Education/index';\r\nimport WorkExperience from '../WorkExperience/index';\r\nimport Languages from '../Languages/index';\r\nimport Skills from '../Skills/index';\r\nimport Download from '../Download/index';\r\nimport { changeStep } from '../Home/index';\r\nimport { styles } from '../CvDocument/styles'\r\n\r\nconst Templates = () => {\r\n    const templatesList = Object.keys(styles);\r\n\r\n    const [template, setTemplate] = useState({number: '', color: '#8AAFC3'});\r\n    const [personal, setPersonal] = useState({\r\n        photo: '',\r\n        name: '',\r\n        surname: '',\r\n        city: '',\r\n        phone: '',\r\n        email: ''\r\n    });\r\n    const [schools, setSchools] = useState([]);\r\n    const [works, setWorks] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [skills, setSkills] = useState([]);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n    const selectColor = (color) => {\r\n        const colors = ['gray', 'green', 'blue', 'yellow', 'brown'];\r\n\r\n        let colorCode = '';\r\n        if(color === 'gray') colorCode = '#B5B5B5';\r\n        if(color === 'green') colorCode = '#90C999';\r\n        if(color === 'blue') colorCode = '#91BDC7';\r\n        if(color === 'yellow') colorCode = '#F1F37B';\r\n        if(color === 'brown') colorCode = '#AD8E7D';\r\n\r\n        const colorsItems = [];\r\n        colors.map((color) => colorsItems.push(document.querySelector(`#${color}`)));\r\n        for(const color of colorsItems) {\r\n            color.classList.remove('selected');\r\n        }\r\n        document.querySelector(`#${color}`).classList.add('selected');\r\n        setTemplate({...template, color: colorCode});\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <main className=\"templates__container\">\r\n                <StepInfo current=\"1\" />\r\n                <p className=\"templates__title\">\r\n                    Choose template\r\n                </p>\r\n                {templatesList.map((tem, q) => {\r\n                    if(q === 1) return (\r\n                        <React.Fragment key={q}>\r\n        \r\n                            <img key={q} onClick={() => { setTemplate({...template, number: tem}); changeStep(1, 'next') }} src={require(`../../assets/templates/template_${tem}.PNG`)} alt={`template_${tem}`} className=\"templates__img\"/>\r\n                            \r\n                            <div className=\"templates__colors\">\r\n                                <div onClick={() => selectColor('gray')} id=\"gray\" className=\"templates__color selected\" />\r\n                                <div onClick={() => selectColor('green')} id=\"green\" className=\"templates__color\" />\r\n                                <div onClick={() => selectColor('blue')} id=\"blue\" className=\"templates__color\" />\r\n                                <div onClick={() => selectColor('yellow')} id=\"yellow\" className=\"templates__color\" />\r\n                                <div onClick={() => selectColor('brown')} id=\"brown\" className=\"templates__color\" />\r\n                            </div>\r\n\r\n                        </React.Fragment>\r\n                    ); else return (\r\n                    <img key={q} onClick={() => { setTemplate({...template, number: tem}); changeStep(1, 'next') }} src={require(`../../assets/templates/template_${tem}.PNG`)} alt={`template_${tem}`} className=\"templates__img\"/>\r\n                    )\r\n                })}\r\n                \r\n            </main>\r\n            <PersonalData \r\n                personal={personal}\r\n                setPersonal={setPersonal}   \r\n            />\r\n            <Education \r\n                schools={schools}\r\n                setSchools={setSchools}\r\n            />\r\n            <WorkExperience \r\n                works={works}\r\n                setWorks={setWorks}\r\n            />\r\n            <Languages \r\n                languages={languages}\r\n                setLanguages={setLanguages}\r\n            />\r\n            <Skills \r\n                skills={skills}\r\n                setSkills={setSkills}\r\n                setIsCompleted={setIsCompleted}\r\n            />\r\n\r\n          { isCompleted &&  <Download \r\n                template={template}\r\n                personal={personal}\r\n                schools={schools}\r\n                works={works}\r\n                languages={languages}\r\n                skills={skills}\r\n            />}\r\n           \r\n        </>\r\n    );\r\n}\r\n \r\nexport default Templates;","import React from 'react';\r\nimport './index.scss';\r\n\r\nimport Templates from '../Templates/index';\r\nimport Button from '../Button/index';\r\n\r\n\r\nexport const changeStep = (currentStep, direction) => {\r\n    const app = document.querySelector('.app__container');\r\n    const property = direction === 'next' ? `translateX(-${currentStep + 1}00vw)` : `translateX(-${currentStep - 1}00vw)`;\r\n    app.style.transform = property;\r\n}\r\n\r\nconst Home = () => {\r\n\r\n    return ( \r\n        <>\r\n            <main className=\"home__container\">\r\n                <p className=\"hero__text\">\r\n                    Create your own CV with our templates!\r\n                </p>\r\n                <span onClick={() => changeStep(0, 'next')} >\r\n                    <Button text=\"Start now\" />\r\n                </span>\r\n                <p className=\"invite__text\">\r\n                    No programms needed.\r\n                </p>\r\n                <p className=\"invite__text\">\r\n                    Easy in use.\r\n                </p>\r\n                <p className=\"invite__text\">\r\n                    PDF format.\r\n                </p>\r\n            </main>\r\n            <Templates />\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport './index.scss';\r\n\r\nconst Logo = () => {\r\n    return ( \r\n        <p className=\"logo\">\r\n            cv-maker\r\n        </p>\r\n    );\r\n}\r\n \r\nexport default Logo;","import React from 'react';\nimport './App.scss';\nimport Home from './components/Home/index';\nimport Logo from './components/Logo/index';\n\nconst App = () => {\n  return (\n    <>\n      <Logo />\n      <div className=\"app__container\"> \n        <Home />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}